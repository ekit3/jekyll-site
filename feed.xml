<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-10-26T02:11:36-05:00</updated><id>/feed.xml</id><title type="html">Blog | Tech</title><subtitle>Welcome To the Ekite's Tech Blogs.</subtitle><entry><title type="html">Web Assembly</title><link href="/articles/front-end/web-assembly/" rel="alternate" type="text/html" title="Web Assembly" /><published>2022-10-06T02:00:00-05:00</published><updated>2022-10-06T02:00:00-05:00</updated><id>/articles/front-end/web-assembly</id><content type="html" xml:base="/articles/front-end/web-assembly/">&lt;h5 id=&quot;boostez-vos-applis-web-avec-web-assembly--&quot;&gt;Boostez vos applis web avec Web Assembly ! &lt;br /&gt;&lt;/h5&gt;

&lt;p&gt;Web Assembly (ou WASM) est un standard du World Wide Web consistant en un &lt;a href=&quot;#bytecode&quot;&gt;bytecode&lt;/a&gt; exécuté côté navigateur dans un environnement dédié (sandbox) en complément du Javascript (JS).&lt;/p&gt;

&lt;p&gt;Ce code bas niveau étant interprété côté navigateur peut être écrit dans différents langages comme le C, C++, RUST, x86 etc.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;L’interprétation du Web Assembly se fait plus bas-niveau que celle du Javascript. Web Assembly utilise de manière plus efficace et directe les ressources disponibles sur la machine sur laquelle il s’exécute (CPU/Mémoire), et permet donc d’atteindre un haut niveau de performances.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ces performances accrues permettent alors de développer des applications qui n’étaient pas envisageables en Javascript. Par exemple du traitement vidéo en temps réel, comme le floutage d’arrière plan en visio-conférence, ou encore des jeux vidéo.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Pour résumer, WASM a été créé pour tirer parti de la puissance des langages de bas niveau, couplé à la flexibilité de Javascript afin de créer des applications Web plus performantes.&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;h2 id=&quot;un-peu-de-contexte&quot;&gt;Un peu de contexte&lt;/h2&gt;

&lt;p&gt;WASM fut officiellement lancé en 2015 pour la première fois sous forme d’une démonstration faite sous Unity (moteur de jeu multi plateforme) afin de démontrer les performances et les possibilités de l’outil.&lt;/p&gt;

&lt;p&gt;Mozilla a sorti asm.js, le 21 mars 2013, un sous-ensemble du langage JS pour améliorer les performances grâce à une couche de traitement binaire. 
Google et Lars Bak ont mis en place un moteur JS V8, le 2 septembre 2008, qui peut compiler nativement vers de l’assembleur.
Ces deux derniers événements sont surtout des améliorations liées à la gestion du langage.&lt;/p&gt;

&lt;h2 id=&quot;objectifs&quot;&gt;Objectifs&lt;/h2&gt;

&lt;p&gt;Les objectifs du WASM sont:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;la rapidité&lt;/b&gt; : avoir des performances proches des applications natives (C/C++/Rust) tout en fonctionnant sur un navigateur Web..&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;la portabilité&lt;/b&gt; : WebAssembly est conçu de manière à s’associer aux autres technologies web mais aussi de garantir une rétro compatibilité ascendante entre les différentes versions.&lt;br /&gt;
Il existe aussi des polyfills pour les navigateurs plus anciens.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;la sécurité&lt;/b&gt; : l’environnement dédié permet de garantir une isolation totale du code et de la machine de l’utilisateur.
Par exemple, la partie entrée / sortie (réseau et fichier) est totalement inaccessible (en dehors du module qui l’embarque).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;la-compilation&quot;&gt;La compilation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/web-assembly//image-1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Fig: Le processus de compilation Web Assembly &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Afin d’exécuter du Web Assembly dans une page web, il faut compiler du code écrit dans un langage source (écrit en C, C++, Rust ou autre) vers un code intermédiaire (le bytecode WASM). Le bytecode est situé entre le code d’un langage source et le code machine (binaire).
Cela est rendu possible grâce à une infrastructure de compilation &lt;a href=&quot;#llvm&quot;&gt;LLVM&lt;/a&gt;, qui implémente la traduction d’un AST (&lt;a href=&quot;#syntaxeTree&quot;&gt;arbre de syntaxe abstraite&lt;/a&gt;) en bytecode WASM. &lt;br /&gt;
Le fichier ainsi compilé aura pour extension ‘.wasm’.&lt;/p&gt;

&lt;p&gt;L’utilisation d’une LLVM permet d’isoler et d’uniformiser la compilation de tous les langages sources supportés vers ce format. Pour ajouter le support d’un langage, il suffit d’implémenter un programme capable de lire un AST pour le transmettre à la LLVM (transpilateur).&lt;br /&gt;
Il est donc possible de créer des compilateurs pour n’importe quel langage. (une liste des langages principaux déjà supportés par WASM se trouve sur le Discord de sa communauté.)&lt;/p&gt;

&lt;p&gt;Fonctionnement général du Web Assembly&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/web-assembly//image-2.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le code initialement écrit dans un langage haut-niveau est donc compilé dans en un module web-assembly. La compilation produit un fichier binaire ‘.wasm’ contenant le bytecode devant être exécuté dans le navigateur web de l’utilisateur. Les fichiers ‘.wasm’ peuvent alors être distribués aux utilisateurs comme le reste des ressources statiques d’une application web.&lt;/p&gt;

&lt;p&gt;Lorsqu’un utilisateur consulte l’application web, les ressources statiques (HTML, CSS, Images) sont téléchargées par son navigateur, ainsi que le code Javascript et les binaires ‘.wasm’. Le navigateur se charge de décoder, compiler et exécuter le code WASM, en parallèle du code Javascript habituel.&lt;/p&gt;

&lt;h2 id=&quot;les-concepts&quot;&gt;Les concepts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Intégration sur le web
WebAssembly est conçu de manière à facilement s’associer aux autres technologies web et de garantir une rétrocompatibilité.&lt;/li&gt;
  &lt;li&gt;Le fichier compilé est téléchargé, l’exécution est faite nativement sur le poste de l’utilisateur et la mémoire est gérée de manière linéaire.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bien que l’exécution ait lieu sur le poste de l’utilisateur, WASM ne permet pas l’accès à certains composants du &lt;a href=&quot;#kernel&quot;&gt;kernel&lt;/a&gt; : Il existe une limite sur la gestion des entrées/sorties. (pour des raisons de sécurité)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Mémoire linéaire
La mémoire linéaire est une seule plage d’adresse mémoire sur laquelle on peut agir au fil de l’eau. Vu l’abstraction du sujet, il est mieux de pouvoir se représenter tout ça. Voici un parallèle entre la manière dont est gérée la mémoire en Java (de Jakob Jenkov) et un schéma de la mémoire linéaire (de Meghalee Goswami) :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/web-assembly//image-3.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Avant d’aller à la suite un petit aparté : WASM a mis en place un traducteur du fichier compilé nommé &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format&quot;&gt;Web Assembly Text (WAT)&lt;/a&gt;. Le fichier compilé est donc lisible&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Module 
Représente un binaire WASM qui a été compilé en code exécutable par le navigateur.&lt;/li&gt;
  &lt;li&gt;Table 
Représente un tableau typé de référence ne pouvant être stocké de manière brute en mémoire (pour des raisons de sécurité et de portabilité).&lt;/li&gt;
  &lt;li&gt;Instance
Représente un module associé ainsi que ses états (la mémoire, la table ainsi qu’un ensemble de données importées).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;les-cas-dusage-de-wasm&quot;&gt;Les cas d’usage de WASM&lt;/h2&gt;

&lt;p&gt;Comme expliqué en introduction, WASM permet un haut niveau de performances impossible en Javascript. Ces performances ouvrent la possibilité d’implémenter de nouveaux cas d’usage. Certains de ces cas d’usage sont concrets et déjà mis en place dans certaines applications et jeux. D’autres cas d’usage sont plutôt de l’ordre du POC (Proof Of Concept) ou de la démo : &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Server-side rendering&lt;/li&gt;
  &lt;li&gt;OCI (Open Container Initiative)&lt;/li&gt;
  &lt;li&gt;3D Web View Rendering&lt;/li&gt;
  &lt;li&gt;Étendre des fonctions JS&lt;/li&gt;
  &lt;li&gt;Extensions navigateurs (ublock origin)&lt;/li&gt;
  &lt;li&gt;Utilisation de la 3D&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici des exemples d’applications connues faites à l’aide de WASM : &lt;br /&gt;
&lt;a href=&quot;https://www.figma.com/fr/blog/webassembly-cut-figmas-load-time-by-3x/&quot;&gt;Figma&lt;/a&gt;, &lt;a href=&quot;https://madewithwebassembly.com/showcase/google-earth&quot;&gt;Google Earth&lt;/a&gt;, &lt;a href=&quot;https://madewithwebassembly.com/showcase/unity&quot;&gt;Unity&lt;/a&gt;, &lt;a href=&quot;https://madewithwebassembly.com/showcase/tensorflow&quot;&gt;Unity&lt;/a&gt;, etc.&lt;/p&gt;

&lt;h3 id=&quot;pros&quot;&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Performance&lt;/li&gt;
  &lt;li&gt;Cross platform&lt;/li&gt;
  &lt;li&gt;Sécurisation&lt;/li&gt;
  &lt;li&gt;multiples langages Rust / C++ / C etc.&lt;/li&gt;
  &lt;li&gt;Portabilité&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cons&quot;&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Communauté faible&lt;/li&gt;
  &lt;li&gt;Beaucoups de concepts complexe à appréhender avant de pouvoir faire la moindre chose&lt;/li&gt;
  &lt;li&gt;N’a pas encore percé malgré son “âge”&lt;/li&gt;
  &lt;li&gt;Installation plus ou moins aisée en fonction de la plateforme de développement&lt;/li&gt;
  &lt;li&gt;Pas “user friendly”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Le principal but de WASM est d’apporter un enrichissement de la stack technique de Javascript avec un haut niveau de performances.
La plus grande difficulté de WASM reste d’assimiler ses différents principes et concepts généraux&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;devoir utiliser un langage de bas niveau&lt;/li&gt;
  &lt;li&gt;utiliser un compilateur&lt;/li&gt;
  &lt;li&gt;avoir affaire à une communauté de niche&lt;/li&gt;
  &lt;li&gt;assez complexe à appréhender
Malgré une adoption encore faible, il n’en reste pas moins fiable que ce soit en termes de sécurité, de performance, de lisibilité et dans certains domaines la seule solution possible afin de garantir un haut niveau de performance sur une application Web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lexique&quot;&gt;Lexique&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;&lt;a name=&quot;bytecode&quot;&gt;bytecode:&lt;/a&gt;&lt;/b&gt; En informatique, le bytecode (terme anglais signifiant « code en bytes ») est un code intermédiaire entre les instructions machines et le code source, qui n’est pas directement exécutable. Le bytecode (également appelé code portable ou p-code) peut être créé à la volée et résider en mémoire (compilation à la volée, JIT en anglais) ou bien résider dans un fichier, généralement binaire qui représente le programme, tout comme un fichier de code objet produit par un compilateur.
&lt;a href=&quot;https://fr.wikipedia.org/wiki/Bytecode&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;&lt;a name=&quot;syntaxeTree&quot;&gt;Arbre de syntaxe abstraite:&lt;/a&gt;&lt;/b&gt; Un arbre de syntaxe abstraite (AST) est une manière de représenter la syntaxe d’un langage de programmation sous la forme d’une structure arborescente hiérarchique. Cette structure est utilisée pour générer des tables de symboles pour les compilateurs et la génération de code ultérieure. L’arbre représente toutes les constructions du langage et leurs règles ultérieures.
&lt;a href=&quot;https://definir-tech.com/arbre-de-syntaxe-abstraite-ast/&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;&lt;a name=&quot;llvm&quot;&gt;LLVM:&lt;/a&gt;&lt;/b&gt; LLVM (anciennement appelé Low Level Virtual Machine en français : « machine virtuelle de bas niveau ») est une infrastructure de compilateur conçue pour l’optimisation du code à la compilation, à l’édition de liens, voire à l’exécution ou durant les « temps morts » d’un programme, quel que soit le langage d’origine.
LLVM permet de créer une machine virtuelle pour des langages similaires à Java et sa JVM, un générateur de code pour une architecture matérielle spécifique, et des optimiseurs de compilation indépendants de toute plate-forme et de tout langage.
&lt;a href=&quot;https://fr.wikipedia.org/wiki/LLVM&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;&lt;a name=&quot;kernel&quot;&gt;Kernel:&lt;/a&gt;&lt;/b&gt; terme anglais signifiant « noyau ». Il constitue le cœur du système qui exploite un ordinateur. Il établit la communication entre la partie matérielle et la partie logicielle de l’appareil.
&lt;a href=&quot;https://www.jedha.co/blog/kernel-definition-utilite&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;p&gt;The state of WebAssembly (2022)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.mozfr.org/post/2017/03/08/D-ou-vient-la-rapidite-de-WebAssembly&quot;&gt;https://tech.mozfr.org/post/2017/03/08/D-ou-vient-la-rapidite-de-WebAssembly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/fr/docs/&quot;&gt;https://developer.mozilla.org/fr/docs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://emscripten.org/&quot;&gt;https://emscripten.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/fr/docs/&quot;&gt;https://developer.mozilla.org/fr/docs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jenkov.com/tutorials/java-concurrency/java-memory-model.html&quot;&gt;https://jenkov.com/tutorials/java-concurrency/java-memory-model.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hSeB9I_mK6A&amp;amp;t=4s&quot;&gt;Angry Bots Démo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://discord.gg/3B8QFXkYTc&quot;&gt;lien discord Wasm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://madewithwebassembly.com/&quot;&gt;Applications faite en WASM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://radu-matei.com/blog/wasm-to-oci/&quot;&gt;OCI (Open Container Initiative)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://study.com/academy/lesson/what-is-the-linear-memory-model-definition-constraints.html&quot;&gt;schéma mémoire linéaire de Meghalee Goswami&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;laurent_duchaussoy&quot;, &quot;florian_barbet&quot;, &quot;jean_dusenne&quot;]</name></author><category term="Front-End" /><summary type="html">Boostez vos applis web avec Web Assembly ! Web Assembly (ou WASM) est un standard du World Wide Web consistant en un bytecode exécuté côté navigateur dans un environnement dédié (sandbox) en complément du Javascript (JS). Ce code bas niveau étant interprété côté navigateur peut être écrit dans différents langages comme le C, C++, RUST, x86 etc. L’interprétation du Web Assembly se fait plus bas-niveau que celle du Javascript. Web Assembly utilise de manière plus efficace et directe les ressources disponibles sur la machine sur laquelle il s’exécute (CPU/Mémoire), et permet donc d’atteindre un haut niveau de performances. Ces performances accrues permettent alors de développer des applications qui n’étaient pas envisageables en Javascript. Par exemple du traitement vidéo en temps réel, comme le floutage d’arrière plan en visio-conférence, ou encore des jeux vidéo. Pour résumer, WASM a été créé pour tirer parti de la puissance des langages de bas niveau, couplé à la flexibilité de Javascript afin de créer des applications Web plus performantes.</summary></entry><entry><title type="html">Exécuter une application localement sur minikube avec skaffold</title><link href="/articles/devops/skaffold-et-minikube/" rel="alternate" type="text/html" title="Exécuter une application localement sur minikube avec skaffold" /><published>2022-07-29T00:00:00-05:00</published><updated>2022-07-29T00:00:00-05:00</updated><id>/articles/devops/skaffold-et-minikube</id><content type="html" xml:base="/articles/devops/skaffold-et-minikube/">&lt;p&gt;Lors du développement d’une application pour Kubernetes, le développeur est souvent lié à une boucle de feedback assez longue:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Développement&lt;/li&gt;
  &lt;li&gt;Contruction de l’image Docker (quelques secondes/minutes)&lt;/li&gt;
  &lt;li&gt;Push de l’image sur un registry&lt;/li&gt;
  &lt;li&gt;Déploiement sur Kubernetes (quelques minutes)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cette boucle est généralement implémentée par des pipelines de CI/CD. Ces pipelines augmentent encore le temps entre le développement et une application démarrée sur Kubernetes. Ce temps est relativement long lorsqu’on compare un cycle de développement local auquel un développeur peut être habitué.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://skaffold.dev&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt;&lt;/a&gt;, développé par Google, est un outil open-source en license Apache, qui permet d’implémenter cette boucle de développement sur un environnement Kubernetes local ou distant. La promesse de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; est de rendre le développement sur Kubernetes simple, rapide et reproductible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/devops/skaffold-et-minikube//skaffold.png&quot; alt=&quot;la page d'accueil de skaffold&quot; /&gt;&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; implémente un &lt;em&gt;pipeline&lt;/em&gt; qui se déroule en plusieurs étapes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;build&lt;/em&gt; : construction des images docker avec:
    &lt;ul&gt;
      &lt;li&gt;Docker (sur base d’un &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;Buildpacks&lt;/li&gt;
      &lt;li&gt;Jib&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;tag&lt;/em&gt; de l’image docker en utilisant différentes stratégies :
    &lt;ul&gt;
      &lt;li&gt;l’identifiant du commit git (par défaut)&lt;/li&gt;
      &lt;li&gt;une date&lt;/li&gt;
      &lt;li&gt;des variables d’environnement&lt;/li&gt;
      &lt;li&gt;un hash des fichiers source
      * push de l’image sur un registry
      * chargement direct de l’image dans un cluster Kubernetes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;deploy&lt;/em&gt; : déploiement de l’application sur Kubernetes (local ou distant) en utilisant:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; et des fichiers yaml&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kustomize&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;helm&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;tail logs &amp;amp; port forward&lt;/em&gt; : affiche les logs de l’application et redirige un port local&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;status check&lt;/em&gt; : attend la fin du bon déploiement de application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; a besoin d’un code à déployer, ainsi qu’un accès à un cluster Kubernetes. L’accès au cluster se configure de la même manière que pour &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt;, à travers un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.kube/config&lt;/code&gt;. Pour la suite de cet article, j’utilise un cluster &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; que j’installe sur mon poste pour l’occasion.&lt;/p&gt;

&lt;h2 id=&quot;déployer-un-cluster-minikube-localement&quot;&gt;Déployer un cluster minikube localement&lt;/h2&gt;
&lt;p&gt;La première étape consiste à déployer un cluster &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; sur mon poste de développement.
Pour ce faire, le plus pratique est de suivre les étapes d’installation de l’outil détaillées &lt;a href=&quot;https://minikube.sigs.k8s.io/docs/start/&quot; target=&quot;_blank&quot;&gt;dans leur documentation d’installation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/devops/skaffold-et-minikube//minikube-install.png&quot; alt=&quot;installation de minikube&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Voici les commandes que j’ai exécuté pour installer &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; sur mon poste Linux :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-LO&lt;/span&gt; https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
&lt;span class=&quot;nb&quot;&gt;sudo install &lt;/span&gt;minikube-linux-amd64 /usr/local/bin/minikube
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; étant déjà installé sur mon poste, je peux tout de suite démarrer un cluster Kubernetes local avec la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube start&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;minikube start
😄  minikube v1.24.0 on Debian bookworm/sid
🎉  minikube 1.26.0 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.26.0
💡  To disable this notice, run: &lt;span class=&quot;s1&quot;&gt;'minikube config set WantUpdateNotification false'&lt;/span&gt;

✨  Using the docker driver based on existing profile
👍  Starting control plane node minikube &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;cluster minikube
🚜  Pulling base image ...
🔄  Restarting existing docker container &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minikube&quot;&lt;/span&gt; ...

🧯  Docker is nearly out of disk space, which may cause deployments to fail! &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;92% of capacity&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
💡  Suggestion: 

    Try one or more of the following to free up space on the device:
    
    1. Run &lt;span class=&quot;s2&quot;&gt;&quot;docker system prune&quot;&lt;/span&gt; to remove unused Docker data &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;optionally with &lt;span class=&quot;s2&quot;&gt;&quot;-a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    2. Increase the storage allocated to Docker &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Desktop by clicking on:
    Docker icon &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Preferences &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Resources &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Disk Image Size
    3. Run &lt;span class=&quot;s2&quot;&gt;&quot;minikube ssh -- docker system prune&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;using the Docker container runtime
🍿  Related issue: https://github.com/kubernetes/minikube/issues/9024

🐳  Preparing Kubernetes v1.22.3 on Docker 20.10.8 ...
🔎  Verifying Kubernetes components...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
    ▪ Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
    ▪ Using image k8s.gcr.io/ingress-nginx/controller:v1.0.4
    ▪ Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
🔎  Verifying ingress addon...
🌟  Enabled addons: storage-provisioner, default-storageclass, ingress
🏄  Done! kubectl is now configured to use &lt;span class=&quot;s2&quot;&gt;&quot;minikube&quot;&lt;/span&gt; cluster and &lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt; namespace by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Par défaut, &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; va générer un fichier de configuration pour &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; dans &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.kube/config&lt;/code&gt;. La commande &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; sera donc immédiatement utilisable:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get nodes
NAME       STATUS   ROLES                  AGE    VERSION
minikube   Ready    control-plane,master   1d     v1.22.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Si la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; n’est pas installée, &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; l’intègre et elle est utilisable de cette manière:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;minikube kubectl get nodes
NAME       STATUS   ROLES                  AGE    VERSION
minikube   Ready    control-plane,master   1d     v1.22.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pour ma part, j’ai installé &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; avec l’outil de packaging de mon système en suivant &lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management&quot; target=&quot;_blank&quot;&gt;cette procédure&lt;/a&gt;.
Une fois que &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; sont installés, démarrés et configurés, je peux passer à l’installation de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;installation-de-skaffold&quot;&gt;Installation de skaffold&lt;/h2&gt;
&lt;p&gt;L’installation de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; est similaire à celle de &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt;.
J’ai suivi la procédure sur &lt;a href=&quot;https://skaffold.dev/docs/install/&quot; target=&quot;_blank&quot;&gt;dans leur documentation&lt;/a&gt; et installé la version Linux avec ces commandes:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-Lo&lt;/span&gt; skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo install &lt;/span&gt;skaffold /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; est maintenant disponible sur mon poste:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;skaffold version
v1.39.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;configuration-dun-projet&quot;&gt;Configuration d’un projet&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; se configure avec un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold.yml&lt;/code&gt; à positionner à la racine de votre projet.
J’ai pris pour exemple un projet Micronaut avec lequel je suis en train d’expérimenter:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── micronaut-cli.yml
├── mvnw
├── mvnw.bat
├── pom.xml
├── README.md
└── src
    └── main
        ├── java
        │   └── com
        │       └── example
        │           ├── Application.java
        │           └── pokemons
        │               ├── PokemonController.java
        │               ├── Pokemon.java
        │               ├── PokemonRepository.java
        │               └── PokemonService.java
        └── resources
            ├── application.yml
            ├── bootstrap.yml
            └── logback.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;La configuration initiale du projet se fait en utilisant la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold init&lt;/code&gt; . Cette commande propose différentes options (&lt;a href=&quot;https://skaffold.dev/docs/pipeline-stages/init/&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt;) en interactif pour créer son fichier de configuration. Cette étape est plus simple qu’écrire le fichier à la main.
Comme je n’ai pas encore écrit de fichiers manifest Kubernetes pour mon application, &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; a une option pour les générer: &lt;code class=&quot;highlighter-rouge&quot;&gt;--generate-manifests&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La première étape consiste à configurer la phase de &lt;em&gt;build&lt;/em&gt; de l’application, à savoir la construction de l’image docker. Plusieurs options seront proposées, en fonction de ce qui est déjà disponible dans le code : &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;, configuration de &lt;code class=&quot;highlighter-rouge&quot;&gt;jib&lt;/code&gt;, ou manifests Kubernetes.
Mon projet Micronaut a déjà une configuration pour &lt;code class=&quot;highlighter-rouge&quot;&gt;jib&lt;/code&gt; dans son &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.google.cloud.tools&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jib-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold init&lt;/code&gt; me propose alors de paramétrer ma phase de &lt;em&gt;build&lt;/em&gt; avec Buildpacks ou Jib:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;skaffold init &lt;span class=&quot;nt&quot;&gt;--generate-manifests&lt;/span&gt;
? Which builders would you like to create Kubernetes resources &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;?  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Use arrows to move, space to &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;, &amp;lt;right&amp;gt; to all, &amp;lt;left&amp;gt; to none, &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;to filter]
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  Buildpacks &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;pom.xml&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  Jib Maven Plugin &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;com.example:demo-app-pokemon-micronaut, pom.xml&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Je choisis l’option &lt;em&gt;Jib&lt;/em&gt; étant donné que ce plugin est déjà configuré pour mon application.&lt;/p&gt;

&lt;p&gt;L’étape suivante propose de configurer un port à forwarder pour mon image Docker, je saisis le port 8080 qui est le port par défaut de mon application:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;? Select port to forward &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;pom-xml-image &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;leave blank &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;none&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; me propose ensuite un manifest Kubernetes et me demande si je souhaite générer les fichiers:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;? Do you want to write this configuration, along with the generated k8s manifests, to skaffold.yaml? Yes
Generated manifest deployment.yaml was written
Configuration skaffold.yaml was written
You can now run &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;skaffold build] to build the artifacts
or &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;skaffold run] to build and deploy
or &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;skaffold dev] to enter development mode, with auto-redeploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;À noter que si des fichiers de déploiement Kubernetes sont déjà présents dans l’application, &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; les détecte et les ajoute à sa configuration automatiquement.
Le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;deployment.yaml&lt;/code&gt; généré pour Kubernetes est simple:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TCP&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;clusterIP&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;None&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ainsi que le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;skaffold/v2beta29&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Config&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;demo-app-pokemon-micronaut&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;jib&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;com.example:demo-app-pokemon-micronaut&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kubectl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;manifests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deployment.yaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;portForward&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resourceName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pom-xml-image&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Le fichier généré contient de la configuration pour 3 étapes du pipeline de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La phase de &lt;em&gt;build&lt;/em&gt; est bien configurée pour construire une image Docker en utilisant &lt;em&gt;Jib&lt;/em&gt;, l’image produite sera nommée &lt;code class=&quot;highlighter-rouge&quot;&gt;pom-xml-image&lt;/code&gt;. Ce nom par défaut pourra être changé en modifiant ce fichier de configuration.&lt;/p&gt;

&lt;p&gt;La phase de &lt;em&gt;deploy&lt;/em&gt; est configurée pour déployer des manifests Kubernetes, ici le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;deployment.yaml&lt;/code&gt; qui a été généré par la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold init&lt;/code&gt;. Ces fichiers manifest référencent l’image &lt;code class=&quot;highlighter-rouge&quot;&gt;pom-xml-image&lt;/code&gt; dans la partie &lt;em&gt;Deployment&lt;/em&gt; du manifest.
On voit donc ici comment on peut adapter cette configuration pour inclure d’autres fichiers, comme une &lt;em&gt;ConfigMap&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;J’ai pris le parti de déplacer les fichiers de manifest Kubernetes générés dans le répertoire &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main/Kubernetes&lt;/code&gt; de mon application et de renommer l’image générée.
Voici la structure de mon application après ces opérations:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── micronaut-cli.yml
├── mvnw
├── mvnw.bat
├── pom.xml
├── README.md
├── skaffold.yaml
└── src
    └── main
        ├── java
        │   └── com
        │       └── example
        │           ├── Application.java
        │           └── pokemons
        │               ├── PokemonController.java
        │               ├── Pokemon.java
        │               ├── PokemonRepository.java
        │               └── PokemonService.java
        ├── kubernetes
        │   ├── configMap.yaml
        │   ├── deployment.yaml
        │   └── service.yaml
        └── resources
            ├── application.yml
            ├── bootstrap.yml
            └── logback.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ainsi que le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;skaffold/v2beta29&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Config&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;demo-skaffold&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;demo-skaffold&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;jib&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kubectl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;manifests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;src/main/kubernetes/*.yaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;portForward&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resourceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resourceName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;demo-skaffold&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;démarrage-de-mon-projet&quot;&gt;Démarrage de mon projet&lt;/h2&gt;
&lt;p&gt;Une fois les fichiers générés, la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold dev&lt;/code&gt; va:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;construire l’image docker en utilisant le builder &lt;em&gt;Jib&lt;/em&gt; configuré&lt;/li&gt;
  &lt;li&gt;déposer cette image directement dans l’environnement du &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;déployer les fichiers de configuration Kubernetes&lt;/li&gt;
  &lt;li&gt;ouvrir un port-forward sur mon port d’écoute 8080&lt;/li&gt;
  &lt;li&gt;afficher les logs de mon application dans mon shell&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;skaffold dev   
Listing files to watch...
 - demo-skaffold
Generating tags...
 - demo-skaffold -&amp;gt; demo-skaffold:latest
Some taggers failed. Rerun with &lt;span class=&quot;nt&quot;&gt;-vdebug&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;errors.
Checking cache...
 - demo-skaffold: Found Locally
Tags used &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;deployment:
 - demo-skaffold -&amp;gt; demo-skaffold:275bf648a141313e52f422d73ad69379be4f4d7c3e9e50fe3c16289da8391c33
Starting deploy...
 - configmap/demo-skaffold created
 - deployment.apps/demo-skaffold created
 - service/demo-skaffold created
Waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;deployments to stabilize...
 - deployment/demo-skaffold is ready.
Deployments stabilized &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;2.047 seconds
Port forwarding service/demo-skaffold &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;namespace default, remote port 8080 -&amp;gt; http://127.0.0.1:8080
Press Ctrl+C to &lt;span class=&quot;nb&quot;&gt;exit
&lt;/span&gt;Watching &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changes...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend]  __  __ _                                  _   
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] |  &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ___ _ __ ___  _ __   __ _ _   _| |_ 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] | |&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;| | |/ __| &lt;span class=&quot;s1&quot;&gt;'__/ _ \| '&lt;/span&gt;_ &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;/ _&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; | | | | __|
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] | |  | | | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;__| | | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | | | | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_| | |_| | |_ 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] |_|  |_|_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__|_|  &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__/|_| |_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_,_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_,_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_|
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend]   Micronaut &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v3.5.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] 14:15:41.202 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main] INFO  i.m.context.env.DefaultEnvironment - Established active environments: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;k8s, cloud]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;backend] 14:15:41.557 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main] INFO  io.micronaut.runtime.Micronaut - Startup completed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;803ms. Server Running: http://demo-skaffold-5bfb47c8fc-cvld4:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/articles/devops/skaffold-et-minikube//localhost.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En quelques minutes, mon application est démarré sur mon cluster &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt; local.
Je peux voir avec une commande &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl get all&lt;/code&gt; que mes manifests ont bien été déployés et que mon application tourne:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get all
NAME                                 READY   STATUS    RESTARTS   AGE
pod/demo-skaffold-5bfb47c8fc-cvld4   1/1     Running   0          19m

NAME                    TYPE        CLUSTER-IP   EXTERNAL-IP   PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    AGE
service/demo-skaffold   ClusterIP   None         &amp;lt;none&amp;gt;        8080/TCP   19m
service/kubernetes      ClusterIP   10.96.0.1    &amp;lt;none&amp;gt;        443/TCP    1d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/demo-skaffold   1/1     1            1           19m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/demo-skaffold-5bfb47c8fc   1         1         1       19m

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; est aussi capable de faire du &lt;em&gt;hot-reload&lt;/em&gt; sans configuration supplémentaire pour les applications buildées avec &lt;em&gt;jib&lt;/em&gt;.
Il suffit de:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;modifier le code&lt;/li&gt;
  &lt;li&gt;attendre quelques secondes que le code soit re-compilé et l’application est re-démarrée&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Watching &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changes...
Generating tags...
 - pom-xml-image -&amp;gt; pom-xml-image:latest
Some taggers failed. Rerun with &lt;span class=&quot;nt&quot;&gt;-vdebug&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;errors.
Checking cache...
 - pom-xml-image: Not found. Building
Starting build...
Found &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;minikube] context, using &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;docker daemon.
Building &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;pom-xml-image]...
Target platforms: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;linux/amd64]

...

Build &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;pom-xml-image] succeeded
Tags used &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;deployment:
 - pom-xml-image -&amp;gt; pom-xml-image:c6d646c3c9ba7ac130cfe23c31b2391584b4bddfce984b2cc1f1f2c711c9d509
Starting deploy...
Waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;deployments to stabilize...
 - deployment/pom-xml-image is ready.
Deployments stabilized &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1.038 second
Port forwarding service/pom-xml-image &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;namespace default, remote port 8080 -&amp;gt; http://127.0.0.1:8080
Watching &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changes...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;C’est particulièrement pratique pour tester une application localement!
Si je veux arrêter de développer, j’utilise la combinaison de touches &lt;em&gt;CTRL+C&lt;/em&gt;, qui va stopper l’application et faire le ménage sur le cluster Kubernetes:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^C
Cleaning up...
 - configmap &lt;span class=&quot;s2&quot;&gt;&quot;demo-skaffold&quot;&lt;/span&gt; deleted
 - deployment.apps &lt;span class=&quot;s2&quot;&gt;&quot;demo-skaffold&quot;&lt;/span&gt; deleted
 - service &lt;span class=&quot;s2&quot;&gt;&quot;demo-skaffold&quot;&lt;/span&gt; deleted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; permet de rendre accessible au développeur le déploiement sur un cluster Kubernetes, local ou distant. Cet article a présenté son usage sur un cluster local &lt;code class=&quot;highlighter-rouge&quot;&gt;minikube&lt;/code&gt;, mais &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; fonctionne de manière indifférenciée sur un cluster distant. Il permet aussi de réutiliser des fichiers de configuration Kubernetes, Kustomize ou Helm existants, ce qui est très pratique si l’application dispose déjà de ce type de fichiers.&lt;/p&gt;

&lt;p&gt;Le port forward est très bien intégré et pratique à l’usage (pas besoin de taper une commande &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; supplémentaire).&lt;/p&gt;

&lt;p&gt;La &lt;a href=&quot;https://skaffold.dev/docs/&quot; target=&quot;_blank&quot;&gt;documentation de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt;&lt;/a&gt; est très complète et indique tous les paramètres que chaque phase de son pipeline accepte et fourni aussi des liens vers des tutoriaux.&lt;/p&gt;

&lt;p&gt;Enfin, &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt; est au coeur des plugins &lt;em&gt;Cloud Code&lt;/em&gt; de Google, pour IntelliJ IDEA et VSCode pour l’exécution et le déploiement des application sur Kubernetes.&lt;/p&gt;

&lt;p&gt;De nombreux &lt;a href=&quot;https://github.com/GoogleContainerTools/skaffold/tree/main/examples&quot; target=&quot;_blank&quot;&gt;exemples&lt;/a&gt; sont disponibles sur le repository Github de &lt;code class=&quot;highlighter-rouge&quot;&gt;skaffold&lt;/code&gt;, il y en aura surement un qui correspondra à votre type de projet si vous voulez expérimenter.&lt;/p&gt;

&lt;h3 id=&quot;liens&quot;&gt;Liens&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;le repository Github de &lt;a href=&quot;https://github.com/GoogleContainerTools/skaffold&quot; target=&quot;_blank&quot;&gt;GoogleContainerTools/skaffold&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;le site web &lt;a href=&quot;https://skaffold.dev/&quot; target=&quot;_blank&quot;&gt;skaffold.dev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;la &lt;a href=&quot;https://skaffold.dev/docs/&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;les &lt;a href=&quot;https://github.com/GoogleContainerTools/skaffold/tree/main/examples&quot; target=&quot;_blank&quot;&gt;exemples de code sur Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;julien_wittouck&quot;]</name></author><category term="Devops" /><category term="kubernetes" /><category term="skaffold" /><category term="minikube" /><category term="docker" /><summary type="html">Lors du développement d’une application pour Kubernetes, le développeur est souvent lié à une boucle de feedback assez longue: Développement Contruction de l’image Docker (quelques secondes/minutes) Push de l’image sur un registry Déploiement sur Kubernetes (quelques minutes) Cette boucle est généralement implémentée par des pipelines de CI/CD. Ces pipelines augmentent encore le temps entre le développement et une application démarrée sur Kubernetes. Ce temps est relativement long lorsqu’on compare un cycle de développement local auquel un développeur peut être habitué. skaffold, développé par Google, est un outil open-source en license Apache, qui permet d’implémenter cette boucle de développement sur un environnement Kubernetes local ou distant. La promesse de skaffold est de rendre le développement sur Kubernetes simple, rapide et reproductible.</summary></entry><entry><title type="html">Design Pattern</title><link href="/articles/other/design-pattern/" rel="alternate" type="text/html" title="Design Pattern" /><published>2022-06-15T02:00:00-05:00</published><updated>2022-06-15T02:00:00-05:00</updated><id>/articles/other/design-pattern</id><content type="html" xml:base="/articles/other/design-pattern/">&lt;h5 id=&quot;lart-de-savoir-utiliser-le-bon-outil-au-bon-moment&quot;&gt;L’art de savoir utiliser le bon outil au bon moment&lt;br /&gt;&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//image-pattern.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les “Design Patterns”, ou “patrons de conception”, sont un ensemble de solutions reconnues, particulièrement dans la programmation orientée objet, comme étant la meilleure réponse afin de résoudre un problème de conception récurrent.&lt;/p&gt;

&lt;p&gt;Les exemples de patrons peuvent être faits de différentes façons: par le biais de schémas, de pseudo code, la manière d’organiser ses modules ou classes ou à l’aide d’une implémentation proposée.&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;h2 id=&quot;doù-viennent-ils-&quot;&gt;D’où viennent-ils ?&lt;/h2&gt;

&lt;p&gt;Nous pouvons être redevable à Christopher Alexander, anthropologue et architecte Américain pour avoir travaillé sur “la théorie des Pattern Languages” permettant des déclinaisons dans des domaines aussi divers que l’histoire de l’art, l’anthropologie…&lt;br /&gt;
Cette façon d’aborder le modèle de conception a été reprise en 1987 par Kent Beck (concepteur d’extrême programming) et Ward Cunningham (inventeur du concept de Wiki) , qui ont décidé d’appliquer ce type de design architectural à l’informatique.&lt;br /&gt;
C’est en 1994, à la suite d’un livre nommé &lt;b&gt;Design Patterns: Elements of Reusable Software&lt;/b&gt; co-écrit par un collectif (GoF pour Gang of Four) et décrivant plus d’une vingtaine de patrons que ce principe fut réellement reconnu.&lt;/p&gt;

&lt;h2 id=&quot;voici-les-différents-types-de-patrons-de-conception-&quot;&gt;Voici les différents types de patrons de conception :&lt;/h2&gt;

&lt;h3 id=&quot;le-patron-de-création-creational-pattern&quot;&gt;&lt;b&gt;Le patron de création&lt;/b&gt; (Creational Pattern)&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Il a pour but d’aider à résoudre les problèmes d’instanciation de classes.&lt;/p&gt;

&lt;p&gt;Quelques exemples:&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Singleton&lt;/li&gt;
  &lt;li&gt;Prototype&lt;/li&gt;
  &lt;li&gt;Fabrique (Factory)&lt;/li&gt;
  &lt;li&gt;Fabrique Abstraite (Abstract Factory)&lt;/li&gt;
  &lt;li&gt;Monteur (Builder)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;le-patron-de-structure-structural-pattern&quot;&gt;&lt;b&gt;Le patron de structure&lt;/b&gt; (Structural Pattern)&lt;/h3&gt;
&lt;p&gt;Structurer les classes et objets afin de garder ceux-ci flexibles et efficaces au travers de leur 
structuration et leur interface.&lt;/p&gt;

&lt;p&gt;Quelques exemples:&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pont (Bridge)&lt;/li&gt;
  &lt;li&gt;Façade&lt;/li&gt;
  &lt;li&gt;Adaptateur (Adapter)&lt;/li&gt;
  &lt;li&gt;Objet composite&lt;/li&gt;
  &lt;li&gt;Proxy&lt;/li&gt;
  &lt;li&gt;Poids-mouche (Flyweight pattern)&lt;/li&gt;
  &lt;li&gt;Décorateur (Decorator)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;le-patron-de-comportement-behavioral-pattern&quot;&gt;&lt;b&gt;Le patron de comportement&lt;/b&gt; (Behavioral Pattern)&lt;/h3&gt;
&lt;p&gt;Permet de modéliser et répartir les responsabilités entre les objets.&lt;/p&gt;

&lt;p&gt;Quelques exemples:&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Chaîne de responsabilité (Chain of Responsibility)&lt;/li&gt;
  &lt;li&gt;Commande (Command)&lt;/li&gt;
  &lt;li&gt;Interpréteur (Interpreter)&lt;/li&gt;
  &lt;li&gt;Itérateur (Iterator)&lt;/li&gt;
  &lt;li&gt;Médiateur (Mediator)&lt;/li&gt;
  &lt;li&gt;Mémento&lt;/li&gt;
  &lt;li&gt;Observateur (Observer)&lt;/li&gt;
  &lt;li&gt;Etat (State)&lt;/li&gt;
  &lt;li&gt;Stratégie (Strategy)&lt;/li&gt;
  &lt;li&gt;Patron de méthode (Template Method Pattern)&lt;/li&gt;
  &lt;li&gt;Visiteur (Visitor)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;quand-et-pourquoi-les-utiliser-&quot;&gt;Quand et pourquoi les utiliser ?&lt;/h2&gt;

&lt;p&gt;Un développeur ayant une culture du Design Pattern (et sachant quand c’est le moment d’en utiliser un) pourra trouver plus rapidement une solution grâce aux différents paradigmes proposés et ayant déjà fait leurs preuves.&lt;/p&gt;

&lt;p&gt;Il permet donc :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;d’accélérer le processus de développement,&lt;/li&gt;
  &lt;li&gt;de réduire les bugs potentiels,&lt;/li&gt;
  &lt;li&gt;de connaître les bonnes pratiques et les pièges à éviter&lt;/li&gt;
  &lt;li&gt;de s’appuyer sur la capitalisation de l’expérience de la communauté.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il est donc vraiment important de l’intégrer le plus tôt possible dans le processus de conception / développement.&lt;br /&gt;
Un bon développeur devra savoir s’arrêter et remettre en question son code lorsqu’il se retrouve face à un problème.&lt;br /&gt;
Il faudra se demander “Ne suis-je pas en train de réinventer la roue ? N’existe t’il pas un patron qui pourrait répondre à ma problématique ?”&lt;/p&gt;

&lt;h3 id=&quot;quelques-exemples&quot;&gt;Quelques exemples&lt;/h3&gt;

&lt;p&gt;Il existe de nombreux modèles qui sont souvent très utilisés. La plupart du temps beaucoup de développeurs en utilisent sans savoir qu’il s’agit de modèles de patrons de conception.
Voici quelques cas parmis ceux que vous utilisez peut-être sans même le savoir.&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Modèle Composite&lt;/b&gt; : pour représenter des structures arborescentes pour présenter des hiérarchies de composants / composés.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Singleton&lt;/b&gt; qui permet de limiter l’instanciation d’une classe à un seul objet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-2.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les &lt;b&gt;itérateurs&lt;/b&gt; qui permettent de parcourir les éléments d’une collection (liste, arbre etc.).&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Proxy&lt;/b&gt; : substitue une classe à une autre en utilisant la même interface permettant entre autres la sécurité ou l’appel de méthodes à distance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-3.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Décorateur&lt;/b&gt; : attacher dynamiquement des nouvelles responsabilités à un objet&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-4.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Façade&lt;/b&gt; pour simplifier l’utilisation d’une interface complète.&lt;/p&gt;

&lt;p&gt;L’&lt;b&gt;Observateur&lt;/b&gt; : mécanisme de souscription afin d’envoyer des notifications à plusieurs objets qui sont observés.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-5.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le &lt;b&gt;Stratégie&lt;/b&gt; qui permet de créer des algorithmes séparés dans plusieurs classes autonomes / interchangeables.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/other/design-pattern//dp-6.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Voici un cas d’usage écrit en Typescript pour savoir quand l’utiliser. Imaginons que l’on souhaite faire plusieurs actions différentes mais avec le même objet, nous pourrions être tenté de faire une classe qui contiendrait toutes ces actions? Oui et non, car celà reviendrait à ne pas respecter un des principes du &lt;a href=&quot;https://fr.wikipedia.org/wiki/SOLID_(informatique)&quot;&gt;SOLID&lt;/a&gt; à savoir le “S” pour Single Responsibility Principe.
Prenons le cas d’un site, nous voulons développer une classe qui permet de gérer le paiement.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaymentStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nous allons ensuite créer plusieurs classes correspondant aux différents moyens de paiement :&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreditCardStrategy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaymentStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//  ici on fait des traitements différents&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;je paye en carte de crédit un total de&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;		
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OtherPaymentStrategy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaymentStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;


    &lt;span class=&quot;c1&quot;&gt;//  ici on fait des traitements différents&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;je paye en X moyen de paiement un total de&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;		
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour finir nous créerons une classe finale qui va permettre d’utiliser notre stratégie.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getTotalCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PaymentStrategyMethod&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;methodToPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;methodToPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTotalCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Afin d’utiliser tout ça on pourrait imaginer un sélecteur lorsque l’on passe à l’étape du paiement qui permettrait de sélectionner son moyen de paiement préféré.&lt;/p&gt;

&lt;p&gt;exemple :&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;cart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;199&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreditCardStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pour le premier cas&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OtherPaymentStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pour le second cas&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le &lt;b&gt;Prototype&lt;/b&gt; qui permet de créer de nouveaux objets à partir d’objets existants tout en laissant à la classe le soin du type d’objet à créer.&lt;/p&gt;

&lt;p&gt;La &lt;b&gt;Fabrique&lt;/b&gt; pour instancier des objets dans une classe mère tout en laissant aux sous classes le choix des types d’objets à créer.&lt;/p&gt;

&lt;p&gt;L’ &lt;b&gt;Object Pool&lt;/b&gt; pour économiser le temps d’instanciation et de suppression lorsque de nombreux objets ayant une vie courte seront utilisés.&lt;/p&gt;

&lt;h2 id=&quot;pour-finir&quot;&gt;Pour finir&lt;/h2&gt;

&lt;p&gt;Vous l’aurez compris, le Design Pattern fait partie intégrante des outils indispensables du développeur.&lt;br /&gt; 
Le but de cet article est de vous donner l’envie de vous y intéresser, de lire, de découvrir et surtout d’apprendre à savoir quand les utiliser afin de répondre au mieux à vos besoins.&lt;/p&gt;

&lt;p&gt;Attention toutefois à ne pas tomber dans l’exact contraire, à savoir, l’anti pattern.&lt;br /&gt;
Cela reviendrait à faire le mauvais choix et donc à apporter la mauvaise réponse à une problématique donnée.&lt;/p&gt;

&lt;p&gt;Voici un exemple développé en Java par Maxime, il combine le Pattern Observer et Builder avec comme thème l’organisation de course à pied. &lt;br /&gt;
Lien du repos git : https://github.com/ekit3/design-pattern&lt;/p&gt;

&lt;p&gt;Sources ayant servie à écrire l’article et pour aller plus loin :&lt;/p&gt;

&lt;p&gt;https://fr.wikibooks.org/wiki/Patrons_de_conception
https://ryax.tech/fr/design-pattern-cest-quoi-et-pourquoi-lutiliser/
https://refactoring.guru/
https://madasamy.medium.com/introduction-to-object-oriented-design-patterns-part-i-4e5c7845015b&lt;/p&gt;</content><author><name>[&quot;laurent_duchaussoy&quot;]</name></author><category term="Other" /><summary type="html">L’art de savoir utiliser le bon outil au bon moment Les “Design Patterns”, ou “patrons de conception”, sont un ensemble de solutions reconnues, particulièrement dans la programmation orientée objet, comme étant la meilleure réponse afin de résoudre un problème de conception récurrent. Les exemples de patrons peuvent être faits de différentes façons: par le biais de schémas, de pseudo code, la manière d’organiser ses modules ou classes ou à l’aide d’une implémentation proposée.</summary></entry><entry><title type="html">Les structures algébriques</title><link href="/articles/front-end/algebraic-structure/" rel="alternate" type="text/html" title="Les structures algébriques" /><published>2022-05-18T02:00:00-05:00</published><updated>2022-05-18T02:00:00-05:00</updated><id>/articles/front-end/algebraic-structure</id><content type="html" xml:base="/articles/front-end/algebraic-structure/">&lt;p&gt;Les premiers algorithmes ont été réalisés bien avant que le premier ordinateur ne soit conceptualisé.&lt;br /&gt; 
Le tout premier algorithme connu a été écrit en -300 avant notre ère par Euclide (PGCD).&lt;br /&gt;
Aujourd’hui les mathématiques font rêver, font peur et semblent parfois inaccessibles. Une chose est sûre, elles sont partout.&lt;br /&gt;
Comptables, développeurs, boulangers ou même politiques, tous utilisent les mathématiques : le langage suit un ensemble de règles mathématiques.&lt;br /&gt;
Les structures du langage sont réalisées par l’application d’un arbre de la syntaxe abstraite.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les structures algébriques font partie des bases des mathématiques. C’est un socle sur lequel de nombreuses règles sont construites.&lt;br /&gt;
En particulier, pour réaliser des applications robustes, performantes et maintenables. Elles peuvent apporter une aide précieuse.&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;h4 id=&quot;définition&quot;&gt;Définition:&lt;/h4&gt;

&lt;p&gt;Les structures algébriques sont un ensemble d’entités basées sur des axiomes initiaux à partir desquels il est possible de démontrer un certain nombre de lois.&lt;br /&gt;
L’objectif de ces structures est d’assurer, après avoir vérifié des axiomes simples, la déduction de lois dont il est possible de tirer des conclusions utiles.&lt;br /&gt;
Les premières structures à étudier, les plus simples, sont les magmas et les monoïdes.&lt;/p&gt;

&lt;h3 id=&quot;les-magmas&quot;&gt;Les magmas&lt;/h3&gt;

&lt;p&gt;Les magmas sont les fondations des structures algébriques, le premier niveau. Ils permettent de définir le contexte.&lt;br /&gt;
Cependant, n’ayant que très peu de contraintes, ils ne donnent pas la possibilité d’en déduire beaucoup de lois.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Recette miracle:&lt;/b&gt;&lt;br /&gt;
&lt;b&gt;Pour créer un magma, il faut réunir un ensemble et une loi de composition interne.&lt;/b&gt;
&lt;br /&gt;&lt;br /&gt;
Un ensemble est constitué d’éléments en nombre fini ou non et peut être constitué de différents types d’éléments.&lt;br /&gt;
Par exemple, l’univers est un ensemble contenant des sous-ensembles de planètes, d’étoiles, de trou noirs, etc.&lt;/p&gt;

&lt;p&gt;Une loi de composition interne est une opération entre deux éléments de l’ensemble qui renvoie un élément de ce même ensemble.&lt;br /&gt;
L’opération consistant à mélanger deux pots de peinture crée un autre pot de peinture avec une couleur potentiellement différente.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;CH&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;C056&lt;/td&gt;
      &lt;td&gt;B084&lt;/td&gt;
      &lt;td&gt;M083&lt;/td&gt;
      &lt;td&gt;C189&lt;/td&gt;
      &lt;td&gt;M356&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Henri a 8 ans, adore les cailloux et ses amis (Charles, Bertrand et Marie), il est aussi un spécialiste des mathématiques.&lt;/p&gt;

&lt;p&gt;Henri possède 5 cailloux et une manière très spéciale de les nommer. Cependant Henri ne donne pas de noms aléatoires. Ses cailloux ont un nom relatif à l’endroit et au jour où ils les trouvent.&lt;br /&gt;
Par exemple Henri a trouvé C056 dans le jardin de son ami Charles, le 56ème jour de l’année.&lt;/p&gt;

&lt;p&gt;CH est un sous-ensemble d’un ensemble. Il est caractérisé par la concaténation d’une lettre et d’une série de chiffres allant de 000 à 365 ; appelons cet ensemble CPH (Cailloux potentiels d’Henri).&lt;/p&gt;

&lt;p&gt;Henri est confronté à un problème, il veut savoir quel est son caillou le plus fort. Il va donc pour cela créer une opération pour lui permettre de s’y retrouver.&lt;/p&gt;

&lt;p&gt;Voici en quoi consiste son opération (selon ses propres mots) :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Calculer le poids de chaque caillou.&lt;/li&gt;
  &lt;li&gt;Multiplier la position dans l’alphabet de la lettre par le numéro du jour de l’année.
Comparer lequel est le plus gros, si les deux sont égalités le poids de la lettre l’emporte.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Le résultat de l’opération d’Henri a créé ce tableau :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/algebraic-structure//img-1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Henri ne le sait pas mais il vient de créer un Magma sur l’ensemble CH.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;L’application du plus fort Caillou v0.1.0&lt;/b&gt;&lt;/p&gt;
&lt;details&gt;
  &lt;p&gt;&lt;b&gt;Configuration requise:&lt;/b&gt;&lt;br /&gt;
Un magma, ne possédant aucune autre propriété que celles susmentionnées, permet deux choses essentielles.&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;Contrôler les limites des entrées&lt;/li&gt;
    &lt;li&gt;Mettre en pratique une analyse séquentielle via une opération (LCI).&lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;Classiquement (sans savoir que c’est un magma) une simple analyse syntaxique sur une chaîne de caractère suffit :&lt;/p&gt;

  &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stronger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cailloux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[A-Z]([0-2][0-9][0-9]|3([0-5][0-9]|6[0-5]))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ToIntFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cailloux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;is not a Caillou&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
         &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applyAsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applyAsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;Ici les cailloux potentiels d’Henri ont une forme très spécifique. Voici le résultat avec un magma :&lt;/p&gt;

  &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dayOfYear&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dayOfYear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dayOfYear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;is not a Caillou&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;is not a Caillou&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dayOfYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;strongest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stronger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;strongest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;henrisCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputList&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Caillou:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Caillou:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stronger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;&lt;b&gt;Le magma permet de définir le cadre de travail :&lt;/b&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;ul&gt;
  &lt;li&gt;Connaître l’ensemble des éléments sur lesquels les actions sont réalisées.&lt;/li&gt;
  &lt;li&gt;Connaître l’opération qui sera utilisée en s’assurant que le résultat fait partie de l’ensemble
Aucune autre conclusion ne peut être déduite de ce cadre de travail. Il s’agit de structurer la pensée mais pour aller plus loin et faciliter les traitements, il est nécessaire de définir un cadre légèrement plus contraint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aucune autre conclusion ne peut être déduite de ce cadre de travail. Il s’agit de structurer la pensée mais pour aller plus loin et faciliter les traitements, il est nécessaire de définir un cadre légèrement plus contraint.&lt;/p&gt;

&lt;h3 id=&quot;les-monoïdes&quot;&gt;Les monoïdes&lt;/h3&gt;

&lt;p&gt;Les monoïdes proviennent d’un terme allemand, mal-traduit, signifiant “Individu”.&lt;br /&gt;
Les monoïdes sont, comme toutes les structures algébriques, des magmas respectant des axiomes supplémentaires. Ces axiomes permettent de démontrer des propriétés qui peuvent s’avérer très utiles.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Recette miracle&lt;/b&gt;
&lt;b&gt;Pour créer un monoïde nous avons besoin d’un magma unifère et associatif.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Unifère signifie que l’ensemble contient un élément neutre vis-à-vis de l’opération du magma. Cet élément neutre n’impacte pas le résultat si on réalise l’opération avec n’importe quel élément. &lt;code class=&quot;highlighter-rouge&quot;&gt;(n+0 = n et 0+m = m; 0 est un élément neutre pour l’opération '+' dans l’ensemble des entiers)&lt;/code&gt;.&lt;br /&gt;
Associatif signifie qu’une chaîne d’opération peut être réalisée dans n’importe quel ordre sans que le résultat s’en trouve modifié. &lt;code class=&quot;highlighter-rouge&quot;&gt;(a+b+c = (a+b)+c = a+(b+c); la somme est associative)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Associatif signifie qu’une chaîne d’opération peut être réalisée dans n’importe quel ordre sans que le résultat s’en trouve modifié. &lt;code class=&quot;highlighter-rouge&quot;&gt;(a+b+c = (a+b)+c = a+(b+c); la somme est associative)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ces deux propriétés du monoïde permettent de démontrer une loi très intéressante pour les traitements informatiques : les calculs parallèles. Sans faire la démonstration, un exemple permet de s’imaginer cette propriété en utilisant le monoïde précédemment utilisé : l’ensemble des entiers munis de la somme.&lt;/p&gt;

&lt;p&gt;L’opération consiste à réaliser &lt;code class=&quot;highlighter-rouge&quot;&gt;1+2+3+4+5+6&lt;/code&gt;. L’associativité permet de réaliser les opérations sous la forme &lt;code class=&quot;highlighter-rouge&quot;&gt;(1+2)+(3+4)+(5+6) = 3+7+11 = 10+11 = 21&lt;/code&gt;. Pour réaliser les cinq opérations &lt;code class=&quot;highlighter-rouge&quot;&gt;(nombre de signes ‘+’)&lt;/code&gt;, trois séries de calculs ont été nécessaires &lt;code class=&quot;highlighter-rouge&quot;&gt;(nombre de '=')&lt;/code&gt; en parallélisant trois opérations dans la première étape. Cela est mathématiquement permis uniquement dans le cadre du monoïde.&lt;/p&gt;

&lt;h3 id=&quot;exemple--le-monoïde-derrière-le-magma-dhenri&quot;&gt;Exemple : Le Monoïde derrière le Magma d’Henri&lt;/h3&gt;

&lt;p&gt;Précédemment, Henri a créé un magma, il a également créé un monoïde sur l’ensemble CPH (Cailloux potentiels d’Henri).
Comment Henri a réussi à construire ce monoïde ?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Associativité&lt;/b&gt;
Il faut démontrer l’associativité de l’opération stronger(), visuellement sur l’ensemble CH on peut le voir (effet miroir) :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/algebraic-structure//img-1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Il s’agit d’appliquer ces vérifications sur l’ensemble CPH. En mathématiques il est coutûme de démontrer par formulation que tout élément respecte l’associativité. Naïvement c’est possible (un élément à la fois). Cet ensemble est présent dans 2 autres ensembles : L’alphabet et les chiffres allant de 0 à 365.&lt;/p&gt;

&lt;p&gt;Il est possible de décomposer et se placer dans un ensemble commun :&lt;/p&gt;

&lt;p&gt;Il existe une étape intermédiaire : le calcul du poids. Le calcul du poids est un entiers allant de &lt;code class=&quot;highlighter-rouge&quot;&gt;0 à 9 125 (25 (Z)  * 365)&lt;/code&gt; . Nous appliquons ensuite une comparaison au maximum. 
Cette étape intermédiaire se place dans un sous-ensemble d’un ensemble très connu : les entiers naturels contenant 0. De plus, l’associativité des extremums (calcul maximum et minimum) a été démontrée sur cet ensemble.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Unifère&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;Il faut prouver l’existence d’ un élément neutre. Selon les critères d’Henri le poids d’un cailloux est relatif à sa position dans l’alphabet puis agrégé au jour de l’année où Henri l’a trouvé (sauf exception en cas d’égalité : la lettre l’emporte). Cela veut dire que le poids minimum qui est de 0 (représenté par le cailloux potentiel d’Henri A000) est le cailloux le plus faible possible dans cet ensemble. 0 étant le nombre le plus petit des entiers naturels contenant 0, cela fait de lui un élément neutre dans le calcul du maximum :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Pour tout x dans N; tel que x &amp;gt;= 0 alors x&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le classement est ingénieux, à quoi peuvent servir ces axiomes ?&lt;/p&gt;

&lt;p&gt;L’associativité permet de dire que peu importe le sens d’une opération elle aura le même résultat. Si on l’applique en première ou en dernière, rien ne change !&lt;br /&gt;
L’élément neutre permet de mettre en place une forme d’initialisation pour le cas où un jour Henri oublie de mettre le nom de tous ses cailloux dans son application par exemple.&lt;/p&gt;

&lt;p&gt;Henri aimerait vraiment que son application soit plus performante car il en a encore une centaine…. de milliers de cailloux à traiter.
&lt;br /&gt;&lt;br /&gt;
&lt;b&gt;L’application du plus fort Caillou v0.1.1&lt;/b&gt;&lt;/p&gt;
&lt;details&gt;
  &lt;p&gt;L’associativité permet de mettre en place du multi-threading.&lt;br /&gt;
L’élément neutre a un rôle d’initialisation/valeur par défaut.&lt;/p&gt;

  &lt;p&gt;Classiquement la mise en place d’une certaine parallélisation est enclin à de nombreux doutes. Pour continuer l’exemple, il faut mettre ces doutes de côté.&lt;/p&gt;

  &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stronger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cailloux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[A-Z]([0-2][0-9][0-9]|3([0-5][0-9]|6[0-5]))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ToIntFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atomicResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A000&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ForkJoinPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cailloux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;is not a Caillou&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atomicResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weightACaillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applyAsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applyAsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;atomicResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCaillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atomicResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Result : Y364
Time: 78 ms over 250000 iterations ; CPU usage (%): 4.438960808734625 %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Avant : Y364
Time: 235 ms over 250000 iterations ; CPU usage (%): 4.438960808734625 %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;Voici le résultat avec la réflexion sur les monoïdes :&lt;/p&gt;

  &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;neutral&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;henrisCailloux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputList&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallelStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Caillou:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Caillou&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;neutral&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;Caillou:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stronger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Result: Optional[Caillou[letter=Y, dayOfYear=364]]
Time: 8 ms over 250000 iterations ; CPU usage (%): 4.438960808734625 %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Avant : Optional[Caillou[letter=Y, dayOfYear=364]]
Time: 12 ms over 250000 iterations ; CPU usage (%): 4.438960808734625 %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
Le monoïde permet d’apporter de nouvelles propriétés utiles pour une meilleure conception :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une chaîne d’opération peut être parallélisée en garantissant le résultat&lt;/li&gt;
  &lt;li&gt;Une valeur par défaut peut être utilisée pour éviter les erreurs de traitement
Cette structure est la première à apporter des propriétés utiles aux conceptions en informatique. Il en existe beaucoup d’autres, plus ou moins complexes à identifier, pour obtenir divers avantages. Ainsi, en vérifiant des propriétés sur un ensemble et une opération, il est possible de déduire de nombreuses lois qui facilitent ou optimisent les traitements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ce-quon-doit-en-retenir&quot;&gt;Ce qu’on doit en retenir&lt;/h3&gt;

&lt;p&gt;Bien sûr il ne faut pas forcément coder comme un grand mathématicien avec son tableau rempli de formule (quoique en dehors des formules ?).&lt;br /&gt;
Comme l’a dit un grand sage “apprendre à coder via des structures et seulement des structures est un comportement élitiste”.&lt;br /&gt;
Ce même grand sage a dit qu’il est préférable d’apprendre à les identifier.&lt;br /&gt;
Identifier leurs forces, leurs faiblesses, le contexte le plus adéquat à leur utilisation. Une fois qu’on arrive à les cerner, une porte s’ouvre vers une autre manière de développer des applications qualitatives.&lt;br /&gt;
La multitude de structures algébriques qui existent n’est pas exposée ici. Nous vous avons fait vivre les aventures d’Henri pour ouvrir une perspective sur ce monde et dans l’espoir que vous puissiez vous y faire votre propre avis.&lt;br /&gt;
Sans les mathématiques, tout est faisable, mais avec les mathématiques, tout est structuré.&lt;/p&gt;

&lt;h3 id=&quot;sources-&quot;&gt;Sources :&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.derniercri.io/observons-une-premiere-structure-algebrique-appliquee-a-linformatique-le-monoide/&lt;/li&gt;
  &lt;li&gt;https://fr.wikipedia.org/wiki/Th%C3%A9orie_des_cat%C3%A9gories#Morphismes - Xavier Van de Woestyne&lt;/li&gt;
  &lt;li&gt;Thomas Haesslé - Cours et discussions (https://oteku.github.io/)&lt;/li&gt;
  &lt;li&gt;Lambda Lille - conférences (https://twitter.com/lambdalille)&lt;/li&gt;
  &lt;li&gt;https://www.youtube.com/watch?v=RaqlxOihGxw&amp;amp;list=PLNefH6S6myiMFlgsEIGHb8KZaLKE2eAZQ - micmaths&lt;/li&gt;
  &lt;li&gt;https://fr.wikipedia.org/wiki/Th%C3%A9orie_des_cat%C3%A9gories#Morphismes&lt;/li&gt;
  &lt;li&gt;https://fr.wikipedia.org/wiki/Structure_alg%C3%A9brique&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;florian_barbet&quot;]</name></author><category term="Front-End" /><summary type="html">Les premiers algorithmes ont été réalisés bien avant que le premier ordinateur ne soit conceptualisé. Le tout premier algorithme connu a été écrit en -300 avant notre ère par Euclide (PGCD). Aujourd’hui les mathématiques font rêver, font peur et semblent parfois inaccessibles. Une chose est sûre, elles sont partout. Comptables, développeurs, boulangers ou même politiques, tous utilisent les mathématiques : le langage suit un ensemble de règles mathématiques. Les structures du langage sont réalisées par l’application d’un arbre de la syntaxe abstraite. Les structures algébriques font partie des bases des mathématiques. C’est un socle sur lequel de nombreuses règles sont construites. En particulier, pour réaliser des applications robustes, performantes et maintenables. Elles peuvent apporter une aide précieuse.</summary></entry><entry><title type="html">Micro Front End</title><link href="/articles/front-end/micro-front-end/" rel="alternate" type="text/html" title="Micro Front End" /><published>2022-03-02T01:00:00-06:00</published><updated>2022-03-02T01:00:00-06:00</updated><id>/articles/front-end/micro-front-end</id><content type="html" xml:base="/articles/front-end/micro-front-end/">&lt;p&gt;Inspiré par les architectures microservices Back-End, le principe du micro-front end se résume en une agrégation de composants web « isolées ».&lt;br /&gt;
Voyez la page finale comme un puzzle où chaque morceau serait un composant MFE.
Ces composants peuvent être une barre de navigation, un bouton ou tout simplement un texte. Cette découpe apporte en quelque sorte de la “liberté”.&lt;br /&gt;
Ce type d’architecture permet de choisir son framework Front, d’être autonome sur sa livraison et de séparer les projets par équipes au lieu de travailler sur un monolith commun.
Le but du MFE est de simplifier la gestion, la maintenabilité, la conception et le découpage des interfaces utilisateurs.&lt;br /&gt;
Garantir le bon fonctionnement de la page Web finale demandera de la rigueur et un travail commun.&lt;br /&gt;
Il existe une multitude de façon de faire du micro-front end notamment en utilisant des technologies HTML (Iframe) ou un agrégateur en Back End (type Node Js, Java etc..)…
&lt;!--END_SUMMARY--&gt;&lt;/p&gt;

&lt;h5 id=&quot;origine&quot;&gt;Origine&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/micro-front-end//image_1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le terme est apparu dans les RADAR techniques de Thoughtworks en 2016 mais c’est en 2019 que les micro-front end commencent à émerger.&lt;/p&gt;

&lt;h4 id=&quot;thoughtworks--qui-sont-ils-&quot;&gt;Thoughtworks : qui sont-ils ?&lt;/h4&gt;

&lt;p&gt;C’est un organisme public qui se concentre sur la mise en place de concept technologique.&lt;br /&gt;
Ils mettent à disposition la conception et participe à la livraison de logiciels, d’outils, ils proposent également un service de conseil informatique.&lt;/p&gt;

&lt;h4 id=&quot;que-sest-il-passé-entre-lapparition-du-terme-et-sa-réelle-émergence-&quot;&gt;Que s’est-il passé entre l’apparition du terme et sa réelle émergence ?&lt;/h4&gt;

&lt;p&gt;Thoughtworks a mis à disposition une recherche réalisée dans leurs équipes. Cette recherche porte sur la mise en place des micro-services au niveau de l’UI. Thoughtworks a partagé l’évolution conceptuelle des micro-front end. En Novembre 2016, arrivent les premières idées à propos de ce type d’architecture (des idées mais aussi des POC et des phases d’évaluation). &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les ingénieurs de Thoughtworks pensent qu’il serait intéressant d’appliquer un système de micro-services au niveau de l’UI afin d’éviter les monolithes. Ils mettent en avant le fait que l’approche BFF (back-for-front : couche permettant la communication entre le back-end et le front-end) en serait largement bénéficiaire.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;S’ensuit une communication en Mai 2018 (lors de la phase d’essai), celle-ci nous informe que des équipes ont mis en place des structures monolithiques au niveau des services back. Ils font un petit rappel afin d’expliquer l’objectif des micro-front end : obtenir des composants/pages isolés et indépendants les uns des autres et qui appartiennent à différentes équipes.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En Avril 2019 débute la phase d’émergence, à ce stade, Thoughtworks pense que la mise en place des micro-front end représente un bénéfice certain pour les équipes de développement. A partir de ce moment ils commencent à informer et à conseiller sur les implémentations liées aux micro-front end.&lt;/p&gt;

&lt;h4 id=&quot;et-si-jai-rien-compris--petit-résumé&quot;&gt;“Et si j’ai rien compris ?”: Petit Résumé&lt;/h4&gt;

&lt;p&gt;Le processus lié à ce concept, dans un format de type release/actualisation semble venir de la frustration de certaines équipes vis-à-vis des monolithes.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les “assessments” donne pour définition des structures monolithiques Front : « large and sprawling browser applications that are as difficult to maintain and evolve as the monolithic server-side applications we’ve abandoned »&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Soit en français : « Des applications “navigateurs” volumineuses et entremêlées étant aussi difficiles à maintenir et à faire évoluer que des applications back monolithiques déjà  abandonnées. »&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;mise-en-place&quot;&gt;Mise en place&lt;/h4&gt;

&lt;h5 id=&quot;--la-gouvernance&quot;&gt;- La Gouvernance&lt;/h5&gt;

&lt;p&gt;La gouvernance est un élément indispensable lors de l’initialisation d’un projet micro-front end. La liberté provenant de ce type d’architecture est à double tranchant. Une plus grande liberté permet de réaliser plus facilement un ensemble de tâches mais c’est aussi un moyen de surcharger votre application.&lt;/p&gt;

&lt;p&gt;Voici 3 axes de réflexions afin de mieux comprendre la problématique :&lt;/p&gt;

&lt;h5 id=&quot;--le-premier--déterminer-le-scope&quot;&gt;- Le premier : déterminer le scope&lt;/h5&gt;

&lt;p&gt;Réfléchissez à la taille de vos composants (comme ce qui est fait pour les briques dans un modèle microservice en back-end). Cela permet ainsi de réfléchir à la taille de vos équipes et le nombre de ressources à mobiliser. (Votre budget vous remerciera.)&lt;/p&gt;

&lt;h5 id=&quot;--le-second--il-en-faut-un-pour-les-gouverner-tous&quot;&gt;- Le second : il en faut un pour les gouverner tous.&lt;/h5&gt;

&lt;p&gt;L’indépendance des composants peut faire perdre de vue l’objectif commun: la réalisation d’une interface graphique pour une application. Cette application a des attentes en termes d’objectifs, de performances, ou encore d’image (marketing etc…).&lt;br /&gt;
Il faut, par exemple, veiller à avoir une équipe responsable du partage de la connaissance et de la culture afin de ne pas diviser “pour mieux régner” mais plutôt de “réunir pour mieux réussir”. Il est également important d’imaginer la mise en place de tests d’intégrations globaux au niveau du plus haut parent de la famille des composants.&lt;br /&gt;
(Imaginez une application dont chaque composant possède sa propre charte graphique façon sapin de noël..)&lt;/p&gt;

&lt;p&gt;Une solution commune dite “Core” se matérialise par une équipe gérant le noyau du site, elle régit les librairies de bases, la création, la gestion des outils (e.g.. Eventbus), la charte graphique etc.&lt;br /&gt;
Les composants “enfants” hériteront de tout ce qui aura été prévu et partagé par le noyau applicatif.&lt;/p&gt;

&lt;h5 id=&quot;--la-troisième--comment-bien-séquiper-pour-la-performance-&quot;&gt;- La troisième : comment bien s’équiper pour la performance ?&lt;/h5&gt;

&lt;p&gt;Il faut distinguer deux aspects lorsque l’on pense à la qualité des MFE : la performance de chacun d’entre eux mais également du site global en termes d’affichage et de rendu.
Avoir de multiples composants, c’est accepter d’avoir un possible laps de temps au moment de la création/initialisation de chacun.&lt;br /&gt;
Il faut également penser au démarrage et à l’intégration de nouveaux MFE dans l’architecture globale, que ce soit en termes de cohérence, de qualité de code, de sécurité, de chaîne d’intégration et de déploiement.&lt;br /&gt;
Pour éviter cela, il faut mettre en relation des experts techniques (architectes, leader, etc.) capables de trouver des solutions performantes et de partager les bonnes pratiques à tous ces différents niveaux.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Point d’attention : le runtime&lt;/b&gt;&lt;br /&gt;
Plus il y a de frameworks, plus il y aura de runtimes et donc plus de risques que le poids de la page soit augmenté et sa performance dégradée.&lt;br /&gt;
Il faudra limiter la diversité des frameworks utilisés.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/micro-front-end//image_2.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ce graphique montre la consommation en runtime pour chaque build avec le runtime Svelte. On dénote qu’avec à peine 10 composants on consomme moins qu’un Angular pour ne citer que lui.&lt;/p&gt;

&lt;h5 id=&quot;que-doit-on-retenir-&quot;&gt;Que doit-on retenir ?&lt;/h5&gt;

&lt;p&gt;Pour résumer en un seul mot :  “Communiquez !”&lt;br /&gt;
L’indépendance apportée par les MFE peut desservir, chaque équipe faisant ses composants de manière “isolée”, si personne ne s’assure de la cohérence globale cela peut rapidement devenir néfaste.&lt;br /&gt;
Sans communication et gouvernance, la page finale peut vite se retrouver alourdie (du au fait d’un ensemble de technologies mélangées et de la multiplicité des frameworks utilisés) ou chartée de façon bien différente et donc perdre de la cohérence (notamment via le design).&lt;br /&gt;
Tous ces risques peuvent vite amener à regretter les monolithes.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Schéma d’archi&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Voici un exemple qui schématise une architecture micro front avec trois MFE.
Chaque composant est développé avec une techno différente (Vue, Angular, React) et géré par une équipe spécifique, possédant ses outils de CI/CD, de tests, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/micro-front-end//image_3.jpg&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;framework-technos-et-outils&quot;&gt;Framework, technos et outils&lt;/h5&gt;

&lt;p&gt;Une pluralité de frameworks qui vont vous faciliter le développement des micro frontend est disponible : chacun a sa propre philosophie dans la manière d’aborder les concepts liés aux micro frontend.&lt;br /&gt;
Parmi les plus connus on peut citer Single-spa, Bit, Qiankun, Open components …&lt;/p&gt;

&lt;h5 id=&quot;proscons&quot;&gt;Pros/Cons&lt;/h5&gt;
&lt;p&gt;De grandes entreprises ont choisi de se lancer dans les micro frontend, comme IKEA sur son magasin en ligne, Spotify avec son application desktop ou encore Leroy Merlin avec son site Web et Kobi.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Pour chacune de ces applications, des bénéfices se sont rapidement fait sentir, par exemple à travers leur vie dans les différentes plateformes, à travers l’expérience de l’utilisateur ou encore sur une meilleure réalisation des développements grâce à des équipes plus réduite mais concentrées sur une seule feature.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Les avantages et inconvénients des MFE sont fortement liés.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Le découpage du code&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Pros&lt;/b&gt; : plus simple, plus léger, c’est un vrai bonus de lisibilité et de maintenabilité.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Cons&lt;/b&gt; : même si la compréhension unitaire des composants est plus simple, la complexité globale de l’application peut en revanche être plus floue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La liberté des choix technologiques&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Pros&lt;/b&gt; : plus de technologies disponibles implique plus de possibilités.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Cons&lt;/b&gt; : cela peut induire des problèmes de performances, de compatibilité voire de maintenabilité.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;L’indépendance et l’autonomie des équipes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Pros&lt;/b&gt; : cet aspect améliore les conditions et la qualité de développement.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Cons&lt;/b&gt; : la relation inter-équipes ne doit pas être négligée. Le risque étant de s’éloigner de l’objectif principal, d’avoir des demandes de refontes (e.g : ne correspond pas à l’attente des composants consommateurs) et même des migrations d’outils.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;L’indépendance des livraisons&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Pros&lt;/b&gt; : le choix des outils d’intégration et de déploiement continue est possible. Cela permet de livrer uniquement certaines parties de l’application.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Cons&lt;/b&gt; : mais cela implique une gestion de la qualité, du release management ou software delivery global plus complexe à mettre en place.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il est nécessaire de mettre en place une gouvernance forte pour garantir une cohérence dans les choix pris lors du développement des différents composants. (Objectif : assurer une qualité et maintenabilité globale).&lt;/p&gt;

&lt;p&gt;Links : https://www.infoq.com/news/2019/04/real-world-framework-benchmark/&lt;/p&gt;</content><author><name>[&quot;yohann_gueguin&quot;, &quot;florian_barbet&quot;, &quot;laurent_duchaussoy&quot;]</name></author><category term="Front-End" /><summary type="html">Inspiré par les architectures microservices Back-End, le principe du micro-front end se résume en une agrégation de composants web « isolées ». Voyez la page finale comme un puzzle où chaque morceau serait un composant MFE. Ces composants peuvent être une barre de navigation, un bouton ou tout simplement un texte. Cette découpe apporte en quelque sorte de la “liberté”. Ce type d’architecture permet de choisir son framework Front, d’être autonome sur sa livraison et de séparer les projets par équipes au lieu de travailler sur un monolith commun. Le but du MFE est de simplifier la gestion, la maintenabilité, la conception et le découpage des interfaces utilisateurs. Garantir le bon fonctionnement de la page Web finale demandera de la rigueur et un travail commun. Il existe une multitude de façon de faire du micro-front end notamment en utilisant des technologies HTML (Iframe) ou un agrégateur en Back End (type Node Js, Java etc..)…</summary></entry><entry><title type="html">Eco Conception</title><link href="/articles/green-it/eco-conception/" rel="alternate" type="text/html" title="Eco Conception" /><published>2022-02-02T01:00:00-06:00</published><updated>2022-02-02T01:00:00-06:00</updated><id>/articles/green-it/eco-conception</id><content type="html" xml:base="/articles/green-it/eco-conception/">&lt;p&gt;&lt;img src=&quot;/articles/green-it/eco-conception//image4.gif&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’éco-design, l’éco-conception, le green it ou dernièrement &lt;code class=&quot;highlighter-rouge&quot;&gt;la conception responsable de service numérique&lt;/code&gt; sont des termes qui représentent, avant tout, le fait de réfléchir à l’impact environnemental de son projet informatique et aux solutions pour le limiter ou le réduire.&lt;/p&gt;

&lt;p&gt;“Approche méthodique qui prend en considération les aspects environnementaux du processus de conception et développement dans le but de réduire les impacts environnementaux négatifs tout au long du cycle de vie d’un produit” (Norme ISO14006 v2020)&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;p&gt;Que ce soit dans une démarche écologique engagée ou à des fins de communication, le monde de l’informatique n’échappe pas à cette problématique sociétale. Comme dans tous les domaines, l’optimisation des ressources consommées se fait à tous les niveaux et sur tous les périmètres d’un projet informatique :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Conception fonctionnelle&lt;/li&gt;
  &lt;li&gt;Ergonomie&lt;/li&gt;
  &lt;li&gt;Conception technique&lt;/li&gt;
  &lt;li&gt;Conception graphique&lt;/li&gt;
  &lt;li&gt;Développement&lt;/li&gt;
  &lt;li&gt;Hébergement&lt;/li&gt;
  &lt;li&gt;Contenu
…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si certaines solutions paraissent évidentes, comme l’abonnement à une énergie verte, d’autres sont plus étonnantes, comme le fait de remplacer les boutons officiels de partage des réseaux sociaux.&lt;/p&gt;

&lt;p&gt;Cet article n’a pas pour but de toutes les lister mais d’aborder le lien entre solution numérique et consommation de ressources et de proposer un panel représentatif de la richesse du sujet. Le but n’est pas de donner une leçon ou de sauver  le monde.&lt;/p&gt;

&lt;h5 id=&quot;le-numérique-la-physique-avant-tout&quot;&gt;Le numérique, la physique avant tout.&lt;/h5&gt;

&lt;p&gt;En premier lieu, il convient de poser quelques notions pour comprendre comment des informations dématérialisées comme une page web, un email ou encore le visionnage d’une vidéo peut avoir un impact sur l’environnement.&lt;/p&gt;

&lt;p&gt;Prenons l’exemple d’une page d’un site e-commerce.&lt;/p&gt;

&lt;p&gt;Pour consulter cette page web, l’internaute à besoin d’un ordinateur, d’un smartphone ou d’une tablette qu’il va renouveler en moyenne tous les 2 ans. Ce terminal est connecté à une box. La fabrication de ces appareils est coûteuse en ressources environnementales puisque la production de leurs composants exige beaucoup d’énergie, des traitements chimiques et des métaux rares.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/green-it/eco-conception//image3.gif&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;
&lt;a href=&quot;https://librairie.ademe.fr/cadic/2351/guide-pratique-face-cachee-numerique.pdf?modal=false&quot; target=&quot;_blank&quot;&gt;source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ensuite (de façon simplifiée) pour afficher les éléments de la page web (des photos du produit, une description, des caractéristiques, une vidéo explicative, des produits complémentaires….) : on fait appel à des informations stockées sur un serveur, celui-ci traitant la demande et renvoyant les éléments à afficher en retour. Ces informations passent par un réseau de câbles qui consomme de l’énergie, s’use, doit être remplacé ou changé pour absorber la quantité de données toujours croissante.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/green-it/eco-conception//image2.gif&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chacun de ces appels nécessite de l’électricité, dont la production est responsable d’émissions de gaz à effet de serre. Plus il y a d’éléments différents, plus ces éléments sont volumineux, plus l’impact environnemental de cette page sera élevé.
Ces serveurs ont également besoin d’électricité pour fonctionner, et comme ils génèrent de la chaleur à l’usage, ils nécessitent des systèmes de refroidissement eux aussi coûteux en électricité pour fonctionner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/green-it/eco-conception//image5.gif&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;
&lt;em&gt;Problématique de refroidissement des datacenters - ferme de serveurs sous marin&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Le socle du numérique et ses impacts sur l’environnement est en réalité physique !&lt;/p&gt;

&lt;p&gt;Sans oublier également, le technicien qui se déplace pour la maintenance et toutes les autres dépendances et impacts que cela génère…&lt;/p&gt;

&lt;h5 id=&quot;les-impacts-du-numérique-sur-lenvironnement-en-quelques-chiffres&quot;&gt;Les impacts du numérique sur l’environnement en quelques chiffres:&lt;/h5&gt;

&lt;p&gt;Le rapport de GreenIT.fr réalisé avec le soutien de l’Institut du Numérique Responsable réalisé en 2019 nous indique que le secteur du numérique représente 3,8% de l’émission des gaz à effet de serre au niveau mondial. La plus grande source d’impact environnemental du numérique est liée aux équipements des utilisateurs qui représentent 39% des émissions de gaz à effet de serre, 74% de la consommation d’eau et 76% de contribution à l’épuisement des ressources.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/green-it/eco-conception//image1.gif&quot; alt=&quot;image&quot; /&gt;&lt;br /&gt;
&lt;em&gt;évolution de l’empreinte environnementale de 2010 a 2025  (&lt;a href=&quot;https://www.greenit.fr/wp-content/uploads/2019/10/2019-10-GREENIT-etude_EENM-rapport-accessible.VF_.pdf&quot; target=&quot;_blank&quot;&gt;source&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h5 id=&quot;economie-déchelle&quot;&gt;Economie d’échelle&lt;/h5&gt;

&lt;p&gt;Il nous paraît important d’expliquer le principe d’économie d’échelle avant de s’intéresser aux optimisations concrètes.&lt;br /&gt;
Pourquoi ? Pour éviter le linchage populaire lorsque vous lirez qu’utiliser une simple quote au lieu d’une double fait consommer moins.&lt;/p&gt;

&lt;p&gt;L’économie d’échelle correspond traditionnellement à la baisse d’un coût unitaire de production qui rapporté à une augmentation de la quantité produite entraîne une économie importante.&lt;br /&gt;
Vous retirez une frite de chaque repas vendu en france par mcdo (1 800 000 /jour) et vous économisez de la pomme de terre à la fin de l’année !&lt;/p&gt;

&lt;p&gt;Rapporté à notre sujet, il s’agit de diminuer la ressource consommée par chacun de vos utilisateurs pour finalement économiser une grande quantité d’énergie. Et quand on s’appelle Google, par exemple, la mise en place du dark mode entraîne des économies conséquentes.&lt;/p&gt;

&lt;h5 id=&quot;en-pratique&quot;&gt;En pratique&lt;/h5&gt;

&lt;p&gt;En pratique, il est possible d’agir à tous les niveaux de création et de vie d’un produit informatique : depuis sa conception fonctionnelle, graphique ou technique jusqu’à sa réalisation et sa mise en œuvre.&lt;/p&gt;

&lt;p&gt;Il n’est pas question ici de vous fournir une liste exhaustive d’actions à mettre en place mais plutôt d’évoquer quelques problématiques pour découvrir le sujet ou s’y sensibiliser.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Compatibilité des sites web aux différents appareils et navigateurs&lt;/b&gt;&lt;br /&gt;
Au vu du rôle des équipements d’affichage dans l’impact du numérique sur l’environnement, il est primordial aujourd’hui de concevoir les sites web de façon responsive. Cela va permettre à n’importe quel utilisateur de l’utiliser de façon optimale sans avoir besoin d’un appareil en particulier. Cela permet également de limiter le poids des pages (par exemple sur la taille des images) en fonction du terminal utilisé. 
La compatibilité vers les anciens navigateurs est également à prendre en compte pour minimiser les changements d’équipement.
Les éventuels surcoûts de développement sont ici rattrapés par l’audience touchée et le confort de l’expérience utilisateur qui sera bénéfique à la conversion et donc au business.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Sobriété du design et du contenu&lt;/b&gt;&lt;br /&gt;
Lorsque l’on se lance dans un projet qu’il soit professionnel ou personnel, on souhaite tous qu’il soit unique. Mais attention, à vouloir trop personnaliser on sort souvent des standards ce qui entraîne des chargements supplémentaires. Il est important de prendre en compte l’impact d’une police originale, d’une photo très haute définition ou d’éléments graphiques minutieux pour décider si l’apport au niveau UX reste intéressant.&lt;/p&gt;

&lt;p&gt;Un site web éco-conçu est un site sobre au design épuré, sans forcément le dépouiller : il s’agit de respecter les besoins et les contraintes tout en supprimant le superflu.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Sobriété des fonctionnalités&lt;/b&gt;&lt;br /&gt;
Dans une société d’abondance, les produits numériques ne font pas exception à la règle. Combien de fonctionnalités utilisez-vous réellement sur vos applications?
Il arrive vite que l’on empile les nouvelles fonctionnalités en se réjouissant de voir notre projet grandir et s’étoffer, avec l’impression d’offrir aux utilisateurs une expérience riche. Mais encore une fois l’éco conception fait réfléchir sur l’utile et le superflu. Il est important de connaître le parcours de ses utilisateurs et de retirer les fonctionnalités non utilisées pour un gain d’énergie, de performance mais aussi de lisibilité.&lt;/p&gt;

&lt;p&gt;Diversifier son offre est intéressant mais gardez en tête de répondre aux besoins pour lesquels vos utilisateurs vous ont contacté.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;S’arrêter à temps: le mieux est l’ennemi du bien&lt;/b&gt;
L’un des aspects les plus compliqué à gérer est de savoir se limiter dans l’optimisation.
L’instantanéité par exemple : elle n’est parfois pas utile et repasser sur des traitements asynchrone répondra amplement à vos besoins tout en diminuant le nombre d’échanges dans votre SI.&lt;/p&gt;

&lt;p&gt;Une saisie assistée peut accompagner parfaitement votre utilisateur sans aller jusqu’à faire de l’autocomplétion systématique dès 3 caractères saisis.&lt;/p&gt;

&lt;p&gt;Une redirection simple vers les réseaux sociaux est souvent suffisante et beaucoup moins consommatrice que les boutons natifs proposés par ces plateformes qui génèrent de nombreux appels.&lt;/p&gt;

&lt;h5 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h5&gt;

&lt;p&gt;Il existe une multitude d’actions possibles pour limiter l’impact des produits numériques. Nous pourrions passer des heures à décrire comment réduire la consommation d’énergie en passant sur du dark mode, ou en modifiant les CSS pour optimiser l’aspect d’une page pour l’impression par exemple.&lt;br /&gt;
Le but de cet article était plutôt de sensibiliser au sujet, d’exposer la richesse des options possibles pour limiter l’impact environnemental de son produit en intégrant l’écoconception au sein du processus créatif.&lt;/p&gt;

&lt;p&gt;Selon la nature du produit, énormément de choses peuvent être faites, tout dépend de votre contexte…Si le sujet vous intéresse et que vous avez envie d’aller plus loin, voici quelques liens utiles et notamment une liste des bonnes pratiques.&lt;/p&gt;

&lt;h5 id=&quot;pour-aller-aller-plus-loin&quot;&gt;Pour aller aller plus loin&lt;/h5&gt;

&lt;p&gt;liste de bonnes pratiques:&lt;br /&gt;
&lt;a href=&quot;https://collectif.greenit.fr/ecoconception-web/115-bonnes-pratiques-eco-conception_web.htm&quot;&gt;https://collectif.greenit.fr/ecoconception-web/115-bonnes-pratiques-eco-conception_web.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Liste d’outils utiles pour mesurer son impact:&lt;br /&gt;
&lt;a href=&quot;https://institutnr.org/outils-ecoconception-accessibilite&quot;&gt;https://institutnr.org/outils-ecoconception-accessibilite&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rapport mondial sur l’impact du numérique en 2019: &lt;br /&gt;
&lt;a href=&quot;https://www.greenit.fr/wp-content/uploads/2019/10/2019-10-GREENIT-etude_EENM-rapport-accessible.VF_.pdf&quot;&gt;https://www.greenit.fr/wp-content/uploads/2019/10/2019-10-GREENIT-etude_EENM-rapport-accessible.VF_.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impact du numérique en France : &lt;br /&gt;
&lt;a href=&quot;https://www.greenit.fr/wp-content/uploads/2021/02/2021-01-iNum-etude-impacts-numerique-France-rapport-0.8.pdf&quot;&gt;https://www.greenit.fr/wp-content/uploads/2021/02/2021-01-iNum-etude-impacts-numerique-France-rapport-0.8.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sobriété numérique, consommation usage et production: &lt;br /&gt;
&lt;a href=&quot;https://theshiftproject.org/wp-content/uploads/2020/10/Deployer-la-sobriete-numerique_Rapport-complet_ShiftProject.pdf&quot;&gt;https://theshiftproject.org/wp-content/uploads/2020/10/Deployer-la-sobriete-numerique_Rapport-complet_ShiftProject.pdf&lt;/a&gt;
&lt;a href=&quot;https://medium.com/codeshake/%C3%A9coconception-8-cas-pratiques-dapplication-14032c72e8f6&quot;&gt;https://medium.com/codeshake/%C3%A9coconception-8-cas-pratiques-dapplication-14032c72e8f6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ecoresponsable.numerique.gouv.fr/publications/guide-pratique-achats-numeriques-responsables/demarche-numerique-responsable/analyse-cycle-de-vie/#:~:text=L'analyse%20du%20cycle%20de,de%20services%20sur%20l'environnement&quot;&gt;https://ecoresponsable.numerique.gouv.fr/publications/guide-pratique-achats-numeriques-responsables/demarche-numerique-responsable/analyse-cycle-de-vie/#:~:text=L'analyse%20du%20cycle%20de,de%20services%20sur%20l'environnement&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;références-&quot;&gt;Références :&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;https://librairie.ademe.fr/cadic/2351/guide-pratique-face-cachee-numerique.pdf?modal=false&quot;&gt;https://librairie.ademe.fr/cadic/2351/guide-pratique-face-cachee-numerique.pdf?modal=false&lt;/a&gt;
&lt;a href=&quot;https://www.eco-conception.fr/static/definition-de-leco-conception.html&quot;&gt;https://www.eco-conception.fr/static/definition-de-leco-conception.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://librairie.ademe.fr/cadic/2351/guide-pratique-face-cachee-numerique.pdf?modal=false&quot;&gt;https://librairie.ademe.fr/cadic/2351/guide-pratique-face-cachee-numerique.pdf?modal=false&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impact du dark mode:&lt;br /&gt;
&lt;a href=&quot;https://www.cnetfrance.fr/news/android-google-confirme-que-le-mode-sombre-ameliore-l-autonomie-39876317.htm&quot;&gt;https://www.cnetfrance.fr/news/android-google-confirme-que-le-mode-sombre-ameliore-l-autonomie-39876317.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hitek.fr/actualite/le-compte-est-bon-mario-macdonalds_4002&quot;&gt;https://hitek.fr/actualite/le-compte-est-bon-mario-macdonalds_4002&lt;/a&gt;&lt;/p&gt;</content><author><name>[&quot;pauline_vandame&quot;, &quot;romain_vermeeren&quot;, &quot;mehdi_kheir&quot;]</name></author><category term="Green-IT" /><summary type="html">L’éco-design, l’éco-conception, le green it ou dernièrement la conception responsable de service numérique sont des termes qui représentent, avant tout, le fait de réfléchir à l’impact environnemental de son projet informatique et aux solutions pour le limiter ou le réduire. “Approche méthodique qui prend en considération les aspects environnementaux du processus de conception et développement dans le but de réduire les impacts environnementaux négatifs tout au long du cycle de vie d’un produit” (Norme ISO14006 v2020)</summary></entry><entry><title type="html">Mutation testing</title><link href="/articles/testing/mutation-testing/" rel="alternate" type="text/html" title="Mutation testing" /><published>2021-10-27T02:00:00-05:00</published><updated>2021-10-27T02:00:00-05:00</updated><id>/articles/testing/mutation-testing</id><content type="html" xml:base="/articles/testing/mutation-testing/">&lt;p&gt;Le mutation testing a été inventé en 1971 par Richard Lipton.
Sa réflexion est venue suite à des expériences de projets où les programmeurs devaient consacrer le moins de temps possible aux tests.
Le programmeur devait se contenter de tester intelligemment à moindre coût.
Pour lui, l’avantage des programmeurs est qu’ils créent des programmes qui sont presque corrects.
Les erreurs sont principalement dues à des actions inappropriées ou manquantes dans les spécifications. 
Ces erreurs devraient être détectables comme des déviations du programme prévu d’où le mutation testing.&lt;/p&gt;

&lt;p&gt;Cette technique a pour but d’évaluer l’efficacité des tests unitaires des applications.&lt;/p&gt;

&lt;p&gt;Son expansion a, en grande partie, été restreinte à cause de la lourdeur du processus,
mais l’augmentation de la puissance des machines permet de rendre le “mutation testing” plus accessible.&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;

&lt;p&gt;Dans la plupart des projets actuels, les équipes mettent un taux minimal arbitraire de couverture du code à 70 ou 80% (en fonction de la maturité des équipes).&lt;/p&gt;

&lt;p&gt;Cet indicateur ne veut pas dire que le code a été testé à 70 ou 80% et même une couverture de code à 100% n’exclut pas de trouver un bug même si cela peut apporter une illusion de sécurité : qui n’a jamais vu un test avec un assert(true).&lt;/p&gt;

&lt;p&gt;En parallèle, dans les projets informatiques, plus un bug est découvert tard, plus il coûte cher, le mutation testing peut aider à réduire ces coûts.&lt;/p&gt;

&lt;p&gt;Le concept du mutation testing est là pour venir modifier le code “métier” et ainsi vérifier si les tests unitaires arrivent à détecter les changements.&lt;/p&gt;

&lt;p&gt;Les objectifs du mutation testing sont multiples :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Identifier des tests qui ne détectent pas les changements&lt;/li&gt;
  &lt;li&gt;Avoir un score de mutation&lt;/li&gt;
  &lt;li&gt;Apprendre et analyser l’état d’infection d’une application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vocabulaire-du-mutation-testing&quot;&gt;Vocabulaire du mutation testing&lt;/h2&gt;

&lt;p&gt;Les tests unitaires sont une composante du mutation testing. 
Le test unitaire correspond à la vérification d’un bon comportement d’une petite partie d’une application.&lt;/p&gt;

&lt;p&gt;Une mutation est, quant à elle, une modification du code source, comme par exemple, l’action de remplacer un opérateur par un autre, voici quelques exemples :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;passer de + à  -&lt;/li&gt;
  &lt;li&gt;passer de &amp;gt;= à  ==&lt;/li&gt;
  &lt;li&gt;passer de true à false&lt;/li&gt;
  &lt;li&gt;supprimer une instruction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un mutant est le code source modifié par une mutation&lt;/p&gt;

&lt;h2 id=&quot;principe-de-mutation&quot;&gt;Principe de mutation&lt;/h2&gt;

&lt;p&gt;Le principe de mutation se base sur un code “métier” sur lequel on souhaite tester la pertinence des tests unitaires.&lt;/p&gt;

&lt;p&gt;Exemple de mutations possibles et de code métier associés&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; → &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; → &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; → &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; → &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; → &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La phase de génération consiste à parcourir le code métier et à déterminer les mutations possibles. Dès qu’une mutation est applicable alors elle générera un nouveau “mutant”.&lt;/p&gt;

&lt;p&gt;Le processus de génération des mutants peut être gourmand en ressources car le nombre de mutants peut varier en fonction de la complexité du code métier (il y a quelques années c’était encore un frein à l’utilisation de ce concept). 
Il existe des frameworks permettant de générer des mutants de façon “automatique” tel que Pitest pour Java.&lt;/p&gt;

&lt;p&gt;Voici par exemple une simple classe qui réalise une addition:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.business&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et voici deux mutants possibles:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.business&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddMutation1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.business&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddMutation2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;processus-de-tests&quot;&gt;Processus de tests&lt;/h2&gt;

&lt;p&gt;En reprenant l’exemple précédent, nous avons une classe qui a pour but de faire l’addition de deux nombres. Pitest a été utilisé pour le projet.
Pour l’exercice, nous allons voir plusieurs cas.&lt;/p&gt;

&lt;h3 id=&quot;cas-1--absence-de-test-unitaire&quot;&gt;Cas 1 : absence de test unitaire&lt;/h3&gt;

&lt;p&gt;Le but de ce test est de voir comment le mutation testing peut aider un projet sans test unitaire même si cela peut paraître une hérésie… c’est possible…&lt;/p&gt;

&lt;p&gt;Voici le résultat de Pitest sur notre classe :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-result-no-tests.png&quot; alt=&quot;un rapport PiTest en l'absence de tests unitaires&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pitest a créé deux mutants (mis en exemple précédemment) qui sont toujours en vie à la fin du test. Voici le détail des mutations qui ont été effectuées :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-mutations.png&quot; alt=&quot;les mutations faites par Pitest sur notre classse&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cas-2--ajout-dun-test-unitaire&quot;&gt;Cas 2 : ajout d’un test unitaire&lt;/h3&gt;

&lt;p&gt;Pour l’exemple, nous avons un test unitaire qui ne couvre pas entièrement la méthode testée.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testAddPositive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myAddTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myAddTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a et b sont positifs, le résultat attendu devrait être positif&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le résultat du mutation testing est le suivant :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-result-first-test.png&quot; alt=&quot;le résultat de pitest avec notre premier test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le mutation testing révèle que les tests unitaires ne sont pas suffisamment costaud. Il faut les renforcer.&lt;/p&gt;

&lt;p&gt;Le mutant encore debout est :&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.business&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddMutation2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour cela, il faut analyser le rapport que Pitest donne et appliquer un correctif sur le test unitaire pour tuer le mutant au prochain lancement de Pitest.&lt;/p&gt;

&lt;h2 id=&quot;cas-3--renforcement-du-test-unitaire&quot;&gt;Cas 3 : renforcement du test unitaire&lt;/h2&gt;

&lt;p&gt;Suite au renfort du test unitaire, Pitest indique que les tests sont bons et que tous les mutants ont été tués.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testAddResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myAddTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expectedResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myAddTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expectedResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;aLe résultat est différent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-result-test-renforce.png&quot; alt=&quot;Le résultat de pitest avec le test renforcé&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sur un code court et très simple, Pitest a mis moins de 3s (en moyenne) pour générer des mutants et tester ces derniers.
Il a permis de remonter des faiblesses dans les tests unitaires.
Le travail d’analyse sur les mutants encore en vie est assez simple pour ce cas.&lt;/p&gt;

&lt;p&gt;Afin de connaître les limites du mutation testing nous allons l’utiliser sur du code plus complexe.&lt;/p&gt;

&lt;p&gt;Schéma d’explication du framework :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./fonctionnement-fwk.jpg&quot; alt=&quot;Le fonctionnement du framework&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;exemple-avec-le-périmètre-dun-rectangle&quot;&gt;Exemple avec le périmètre d’un rectangle&lt;/h2&gt;

&lt;p&gt;Le but de ce programme est de calculer l’aire d’un rectangle.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calcRectangleArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On peut vérifier avec un test si l’aire du rectangle n’est pas égale à 0.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testRectangleArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calcRectangleeArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;L'aire doit être supérieure à 0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On pourrait ajouter une règle de gestion à notre premier code, avec une interprétation supplémentaire : “Un carré n’est pas un rectangle”.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calcRectangleArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// on retourne 0 pour les carrés&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Suite au changement de code un test est ajouté afin de tester un carré dont les côtés valent 0.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testSquareArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RectangleArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calcRectangleeArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 attendu, car nous sommes dans un carré&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans les deux cas, Pitest remonte une couverture sur le mutation testing de 0%.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-result-square.png&quot; alt=&quot;Résultat de Pitest&quot; /&gt;
&lt;img src=&quot;/articles/testing/mutation-testing//./pitest-result-square-detailed.png&quot; alt=&quot;Résultat Pitest détailllé&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Voici les mutants survivants créés par Pitest. 
Il faut donc analyser les problèmes et renforcer les tests unitaires. 
L’analyse en fonction des résultats peut prendre du temps.&lt;/p&gt;

&lt;h2 id=&quot;exemple-avec-une-application-plus-complexe&quot;&gt;Exemple avec une application plus complexe&lt;/h2&gt;

&lt;h3 id=&quot;spring-petclinic&quot;&gt;Spring PetClinic&lt;/h3&gt;

&lt;p&gt;Spring PetClinic est une application exemple proposée par Spring. Elle montre les principales fonctionnalités du framework. C’est une application simple qui compte environ 250 lignes de code.&lt;/p&gt;

&lt;p&gt;Elle propose des tests JUnit 5 avec quelques tests unitaires mais surtout des tests d’intégration, dont certains avec des mocks. Au total une quarantaine de tests et une couverture de 93%&lt;/p&gt;

&lt;p&gt;L’exécution de l’ensemble des tests prend environ dix secondes dans un IDE.
La commande &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn test&lt;/code&gt; s’exécute approximativement en 20 secondes.&lt;/p&gt;

&lt;p&gt;On peut exécuter pitest sur un projet Maven en tapant directement la commande : &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn org.pitest:pitest-maven:mutationCoverage&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;================================================================================
- Statistics
================================================================================
&amp;gt;&amp;gt; Line Coverage: 222/238 (93%)
&amp;gt;&amp;gt; Generated 111 mutations Killed 74 (67%)
&amp;gt;&amp;gt; Mutations with no coverage 8. Test strength 72%
&amp;gt;&amp;gt; Ran 235 tests (2.12 tests per mutation)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le temps d’exécution est d’un peu plus de 2 minutes.&lt;/p&gt;

&lt;h2 id=&quot;quels-indicateurs-fournit-le-mutation-testing-&quot;&gt;Quels indicateurs fournit le mutation testing ?&lt;/h2&gt;

&lt;p&gt;Pitest calcule un taux de force des tests (Test strength) par rapport au mutation testing.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; Mutations with no coverage 8. Test strength 72%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce taux peut être utilisé avec le % de couverture de code dans les équipes comme indicateur de qualité sur les premiers niveaux de tests.&lt;/p&gt;

&lt;h2 id=&quot;implémentations-possibles-sur-différents-langages&quot;&gt;Implémentations possibles sur différents langages&lt;/h2&gt;

&lt;p&gt;Il existe différents outils pour faire du mutation testing selon les langages :&lt;/p&gt;

&lt;p&gt;Java → Pitest&lt;/p&gt;

&lt;p&gt;Kotlin → Pitest&lt;/p&gt;

&lt;p&gt;Scala → Stryker&lt;/p&gt;

&lt;p&gt;PHP → Infection&lt;/p&gt;

&lt;p&gt;JS → Stryker&lt;/p&gt;

&lt;p&gt;TypeScript → Stryker&lt;/p&gt;

&lt;p&gt;Python → MutPy&lt;/p&gt;

&lt;h2 id=&quot;où-situer-le-mutation-testing-dans-les-méthodes-bdd-et-tdd-&quot;&gt;Où situer le mutation testing dans les méthodes BDD et TDD ?&lt;/h2&gt;

&lt;p&gt;Le Mutation testing est un complément à ces méthodes, il permet de couvrir l’ensemble des tests unitaires et du code en apportant des modifications.&lt;/p&gt;

&lt;p&gt;Le TDD aide à garder le code modulaire cependant il ne suffit pas à fournir un code qui fonctionne exactement comme prévu car il est toujours possible d’ajouter du code à une partie de l’application sans en décrire les attentes. Ceci peut mettre en danger l’ensemble du code. Le mutation testing permet de détecter de façon régulière les possibles “brèches” dans le développement.&lt;/p&gt;

&lt;p&gt;Le BDD, quant à lui, est là pour décrire le comportement que doit avoir une application. Le mutation testing lui va s’assurer du bon fonctionnement d’une fonction et non du comportement global.&lt;/p&gt;

&lt;h2 id=&quot;limites-sur-le-mutation-testing&quot;&gt;Limites sur le mutation testing&lt;/h2&gt;

&lt;p&gt;L’une des premières limites du mutation testing portait sur l’impact qu’il avait sur les ressources d’un ordinateur (CPU/RAM). Cette limite est de moins en moins vrai aujourd’hui.&lt;/p&gt;

&lt;p&gt;La seconde limite reste le temps d’analyse qu’il y a après un rapport de test de mutation testing. Il faut analyser le rapport, puis corriger le test unitaire et ensuite relancer le test de mutation.
Dans cette analyse on peut se retrouver avec des faux positifs ce qui peut constituer une “perte de temps”.&lt;/p&gt;

&lt;p&gt;La troisième limite est une tendance de plus en plus présente de nos jours : celle du Green IT.
Le Green IT est une démarche d’amélioration continue qui vise à réduire l’empreinte écologique, économique et sociale des technologies de l’information et de la communication et de l’organisation grâce aux outils numériques. Le mutation testing est très gourmand en termes de ressources CPU et RAM vu qu’il lit le projet, crée des mutants à partir du code source, recompile et rejoue les tests autant de fois qu’il y a de mutants disponibles.&lt;/p&gt;

&lt;p&gt;En conclusion, le mutation testing est un outil qui aide les équipes à améliorer la qualité de leurs tests unitaires. Cependant cette méthode peut se révéler très coûteuse si on souhaite une couverture à 100%. 
Il faut prendre en compte le temps d’analyse du rapport et du code à la génération des mutants et à l’exécution des tests pour chaque mutant. 
Cet outil doit être utilisé dans des équipes qui sont déjà “matures” sur la qualité de leur tests. Il peut aider les nouveaux développeurs à structurer leur façon de construire les TU.
De plus, il est possible d’utiliser cet outil pour cibler uniquement des parties bien précises de l’application, notamment les parties les plus sensibles, cela peut être un bon moyen de réduire les coûts et de se concentrer sur le plus critique.&lt;/p&gt;

&lt;h2 id=&quot;quelques-axes-de-réflexion-pour-aller-plus-loin-sur-ce-sujet&quot;&gt;Quelques axes de réflexion pour aller plus loin sur ce sujet&lt;/h2&gt;
&lt;p&gt;Comment intégrer le mutation testing dans une stratégie de test ?
Comment automatiser les tests de mutation testing avec github lors d’une peer review par exemple ?
Peut-on automatiser la lecture des rapports et en ressortir les problèmes les plus critiques ?&lt;/p&gt;

&lt;h2 id=&quot;ressources--bibliographie-&quot;&gt;Ressources / Bibliographie :&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Papier de Google : &lt;a href=&quot;https://research.google/pubs/pub46584/&quot;&gt;State of Mutation Testing at Google (PDF)&lt;/a&gt;. Ce papier décrit comment Google utilise les tests de mutation dans le process de code review, pour maximiser la pertinence des mutants :
    &lt;ul&gt;
      &lt;li&gt;une mutation max par ligne de code étudiée (pour limiter la complexité de la review)&lt;/li&gt;
      &lt;li&gt;le code “aride” n’est pas muté (caches, System.out.println, code de logging =&amp;gt; if debug, log.debug() ))&lt;/li&gt;
      &lt;li&gt;les mutations qui rendraient le code équivalent (supprimer un cache/memoization, for i &amp;lt; 10 ou for i != 10) ne sont pas testées&lt;/li&gt;
      &lt;li&gt;ils ne testent pas non plus les mutations sur le code qui pourrait être généré (equals/hashCode/toString) et les messages d’exceptions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://blog.pitest.org/&quot;&gt;Blog de PiTest&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pitest.org/&quot;&gt;Site de PiTest&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/theofidry/awesome-mutation-testing&quot;&gt;awesome mutation testing&lt;/a&gt; : Une compilation des meilleures ressources sur le mutation testing&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Hints on Test Data Selection: Help for the Practicing Programmer, de Richard A. Demillo et R.J Lipton&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;yoann_bouquet&quot;]</name></author><category term="Testing" /><summary type="html">Le mutation testing a été inventé en 1971 par Richard Lipton. Sa réflexion est venue suite à des expériences de projets où les programmeurs devaient consacrer le moins de temps possible aux tests. Le programmeur devait se contenter de tester intelligemment à moindre coût. Pour lui, l’avantage des programmeurs est qu’ils créent des programmes qui sont presque corrects. Les erreurs sont principalement dues à des actions inappropriées ou manquantes dans les spécifications. Ces erreurs devraient être détectables comme des déviations du programme prévu d’où le mutation testing. Cette technique a pour but d’évaluer l’efficacité des tests unitaires des applications. Son expansion a, en grande partie, été restreinte à cause de la lourdeur du processus, mais l’augmentation de la puissance des machines permet de rendre le “mutation testing” plus accessible.</summary></entry><entry><title type="html">PWA : Innovation ou solution de consolation ?</title><link href="/articles/front-end/pwa-innovation-or-consolation/" rel="alternate" type="text/html" title="PWA : Innovation ou solution de consolation ?" /><published>2021-09-29T02:00:00-05:00</published><updated>2021-09-29T02:00:00-05:00</updated><id>/articles/front-end/pwa-innovation-or-consolation</id><content type="html" xml:base="/articles/front-end/pwa-innovation-or-consolation/">&lt;p&gt;&lt;img src=&quot;/articles/front-end/pwa-innovation-or-consolation//pwa-dbz-img.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le terme PWA est entré depuis quelques années dans le long répertoire des acronymes liés au numérique.
Mais qu’est ce qu’une &lt;code class=&quot;highlighter-rouge&quot;&gt;Progressive Web App&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;Pour certains c’est la promesse d’une expérience mobile responsive boostée par les fonctionnalités de votre téléphone. Elle serait facile à mettre en place, de faible coût et elle n’aurait plus rien à envier aux applications natives.&lt;/p&gt;

&lt;p&gt;Afin de vous éclairer sur le sujet et de vous permettre de vous faire votre propre avis, vous trouverez ici les informations qui nous paraissent pertinentes pour une première approche fonctionnelle du sujet.&lt;/p&gt;

&lt;!--END_SUMMARY--&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/pwa-innovation-or-consolation//pwa-logo.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;mais-doù-ça-vient-&quot;&gt;Mais d’où ça vient ?&lt;/h5&gt;

&lt;p&gt;La PWA est une suite logique de l’évolution du web sur mobile. Avant 2007 et l’arrivée des smartphones, l’accès mobile au web se fait par le WAP (Wireless Application Protocol). Il permet le téléchargement d’applications hors ligne non, dépendantes d’un réseau instable et peu performant.&lt;/p&gt;

&lt;p&gt;Après 2007 et avec la popularisation des smartphones arrive l’essor du développement mobile. Dès lors des solutions WEB tournent sur des technologies dynamiques exécutées côté serveur.
Steve Jobs imagine déjà des applications proches du principe de la PWA mais les principaux acteurs du marché font alors le choix de partir sur le développement d’applications natives permettant une meilleure UX et une meilleure intégration avec nos téléphones.&lt;/p&gt;

&lt;p&gt;C’est en 2010 que l’arrivée de HTML5 et CSS3 va relancer les travaux autour d’applications hybrides et la mise en place de design responsive. 
On cherche alors à mutualiser le développement desktop et mobile.&lt;/p&gt;

&lt;p&gt;Le terme PWA arrive en 2015 grâce à Alex Russell, l’un des ingénieurs ayant conceptualisé la solution chez Google. PWA: “Progressive Web Apps: Escaping Tabs Without Losing Our Soul”&lt;/p&gt;

&lt;p&gt;Aujourd’hui les PWA sont supportées par une majorité de grandes entreprises de la tech (Google, Microsoft, Samsung, Mozilla, etc.) et utilisées par de nombreuses marques grand public (Starbucks, Pinterest, Spotify, etc.).&lt;/p&gt;

&lt;h5 id=&quot;oui-mais-ça-consiste-en-quoi-&quot;&gt;Oui mais ça consiste en quoi ?&lt;/h5&gt;

&lt;p&gt;Les Progressive Web Apps sont des versions optimisées d’un site web pour le mobile. Elles intégrent des fonctionnalités du téléphone, qui, jusqu’à aujourd’hui étaient réservées aux applications natives : appareil photo, mode hors ligne, raccourci écran d’accueil etc.
Elles sont considérées comme des &lt;code class=&quot;highlighter-rouge&quot;&gt;solutions Hybrides&lt;/code&gt;. 
Supportées par le navigateur du téléphone, elles ne nécessitent pas de développement spécifique à l’OS et permettent la mutualisation des coûts de développement mobile et desktop.&lt;/p&gt;

&lt;h4 id=&quot;1--un-service-worker-au-coeur-de-lapplication&quot;&gt;1- Un service Worker au coeur de l’application&lt;/h4&gt;

&lt;p&gt;Composant fondamental de la PWA, le service Worker est un script exécuté en tâche de fond qui va apporter toute l’intelligence à la PWA. Il intercepte les requêtes réseaux et y applique des configurations.
Il permet :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mise en cache du contenu&lt;/li&gt;
  &lt;li&gt;Synchronisation des données en arrière plan&lt;/li&gt;
  &lt;li&gt;Push de notifications&lt;/li&gt;
  &lt;li&gt;L’utilisation des fonctionnalités de votre téléphone&lt;/li&gt;
  &lt;li&gt;L’exécution d’actions hors ligne (comme pousser une bannière lorsque le téléphone est hors ligne)&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2--un-manifest-pour-une-expérience-mobile&quot;&gt;2- Un Manifest pour une expérience mobile&lt;/h4&gt;

&lt;p&gt;Le manifest, en plus du service worker, va permettre de transformer un site en PWA et de simuler une expérience native.
Il s’agit d’un simple fichier JSON dans lequel est configuré l’application et qui permet de la personnaliser.
Les utilisateurs pourront également installer directement un site web sur leur mobile ou leur desktop sans passer par les stores d’applications.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Blog Ekite&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Blog Ekite&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Blog Ekite.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-48.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;48x48&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-72.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;72x72&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-96.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;96x96&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-128.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;128x128&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-192.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192x192&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-384.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;384x384&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/images/icons/icon-512.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;512x512&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/jekyll-site/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fullscreen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;theme_color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;background_color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Configuration du raccourci de l’application mobile&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nom&lt;/li&gt;
  &lt;li&gt;URL&lt;/li&gt;
  &lt;li&gt;Icone&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3--des-apis-html5-pour-les-fonctionnalités&quot;&gt;3- Des APIs HTML5 pour les fonctionnalités&lt;/h4&gt;

&lt;p&gt;Le développement de PWA est grandement facilité par HTML5 qui propose la mise à disposition de nombreuses API aux navigateurs.
Ces API permettent, entre autres choses, l’utilisation de fonctionnalités telles que la géolocalisation, le push, le statut de la batterie, le presse papier, l’orientation de l’écran, les vibrations du mobile etc.
La liste détaillée de ces fonctionnalités est disponible sur ce &lt;a href=&quot;https://whatwebcando.today/&quot; target=&quot;_blank&quot;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/articles/front-end/pwa-innovation-or-consolation//pwa-lighthouse.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse est un plugin Chrome qui permet d’auditer un site web et qui indique son niveau de compatibilité avec la PWA.
Ce plugin liste l’ensemble des caractéristiques officielles qui permettent d’évaluer la performance des applications.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Progressive&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Les applications web progressives fonctionnent sur n’importe quel périphérique et intègrent les fonctionnalités disponibles du navigateur et de l’appareil utilisé.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Sécurisée&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;La mise en place d’un protocole HTTPS permet aux PWA d’être fiables et sûres, ce qui répond aux problématiques de sécurité des échanges entre les utilisateurs et les sites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Engageante&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Elles proposent une expérience utilisateur immersive en plein écran et facilitent le réengagement grâce à l’envoi de notifications push web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Installable&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;L’utilisation d’un fichier Manifest permet aux PWA de proposer, à l’instar d’une application mobile native, l’installation de l’application sur l’écran d’accueil du mobile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Rapidité&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;D’après Google, 53 % des internautes abandonnent un site si son chargement prend plus de trois secondes. Une fois le site chargé, la navigation doit se faire de manière rapide et fluide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Optimisation pour le référencement&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Utilisant les technologies du web, les progressive web app peuvent être référencées sur les moteurs de recherche de la même manière que n’importe quel site web classique.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;Indépendante de la connexion&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Grâce à la gestion du cache via l’utilisation d’un Service Worker, une fois le contenu chargé, il sera possible de le consulter même dans les zones de faible connexion réseau.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sur le sujet de la mise en place et de la compatibilité avec les langages du marché, rien de particulier, la liste des frameworks est disponible ici :  &lt;a href=&quot;https://www.hnpwa.com/&quot; target=&quot;_blank&quot;&gt;HNPWA&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;donc-pas-mal-davantages-&quot;&gt;Donc pas mal d’avantages !&lt;/h5&gt;

&lt;p&gt;Les solutions PWA sont assez simples à mettre en place.
Elles ont une marge d’évolution relativement importante selon le temps et l’argent qui y sont consacrés.
D’un point de vue utilisateur, l’installation se fait de façon intuitive, sans même devoir passer par les stores. L’expérience utilisateur peut devenir aussi immersive que sur une application native.&lt;/p&gt;

&lt;p&gt;Les principaux avantages de la PWA sont, sans aucun doute, la fluidité, la fiabilité et la capacité à proposer des parcours hors ligne (grâce au chargement progressif) ainsi que l’optimisation de l’affichage sur mobile.
La co-construction avec le site web facilite l’organisation des équipes et permet la mutualisation des coûts de développement.&lt;/p&gt;

&lt;p&gt;Sur un marché qui ne pense plus seulement à l’expérience utilisateur mais aussi à l’impact environnemental, ces différents avantages s’ancrent parfaitement dans des projets d’éco-conception : moins de données à héberger, un design optimisé pour une utilisation réduite de la batterie du mobile et surtout des phases de développement réduites contrairement à des projets d’application native.&lt;/p&gt;

&lt;h5 id=&quot;mais-aussi-des-limites&quot;&gt;Mais aussi des limites.&lt;/h5&gt;

&lt;p&gt;Vous avez peut-être entendu qu’Apple et PWA ne faisaient pas bon ménage. Malheureusement comme vous pourrez le constater dans ce &lt;a href=&quot;https://www.goodbarber.com/widget/browsers/&quot; target=&quot;_blank&quot;&gt;tableau des compatibilités&lt;/a&gt;, les fonctionnalités disponibles sur Iphone et Safari sont, aujourd’hui encore, très limitées.
Il s’agit là du principal frein à la substitution des applications natives pour les entreprises fortement implantées sur mobile.&lt;/p&gt;

&lt;p&gt;Il est également à noter que la mise en place d’une PWA nécessite une sécurisation de l’ensemble des pages de votre site par le protocole https.&lt;/p&gt;

&lt;h5 id=&quot;qui-fait-de-la-pwa-&quot;&gt;Qui fait de la PWA ?&lt;/h5&gt;

&lt;p&gt;Voici 2 exemples de PWA réussies:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Twitter avec twitter lite: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Objectifs:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Améliorer l’expérience sur les connexions limitées.&lt;/li&gt;
  &lt;li&gt;Simplifier l’accès sans téléchargement sur les stores&lt;/li&gt;
  &lt;li&gt;Optimiser par le cache et la taille des images&lt;/li&gt;
  &lt;li&gt;Charger en amont pour une navigation hors ligne&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Résultat:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;65 % d’augmentation de pages vues par session&lt;/li&gt;
  &lt;li&gt;75 % d’augmentation de tweets envoyés&lt;/li&gt;
  &lt;li&gt;20 % de baisse du taux de rebond (comparé au site mobile avant PWA)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;ALIBABA (2016)&lt;/b&gt;
Objectifs:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Augmenter le taux de conversion sur mobile&lt;/li&gt;
  &lt;li&gt;Personnaliser l’ergonomie et le design sur la PWA&lt;/li&gt;
  &lt;li&gt;Optimiser le chargement des images (nombreuses) pour se déployer sur les pays à faibles connections&lt;/li&gt;
  &lt;li&gt;Fidéliser avec la proposition d’ajout du site sur l’écran d’accueil&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Résultat:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;76% de plus sur le taux de conversions sur tous les navigateurs (30% sur Android)&lt;/li&gt;
  &lt;li&gt;14% d’utilisateurs actifs mensuels en plus sur iOS&lt;/li&gt;
  &lt;li&gt;4X plus d’ajout à l’écran d’accueil&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;en-conclusion&quot;&gt;En conclusion&lt;/h5&gt;

&lt;p&gt;La PWA n’est ni une évolution des solutions mobiles natives ni une solution de consolation.&lt;br /&gt;
Il s’agit d’une vraie réponse à des problématiques de déploiement sur mobile.&lt;br /&gt;
Elle offre une expérience immersive et intuitive pour l’utilisateur.
Sa mise en place est accessible à n’importe quelle taille de projet web.&lt;/p&gt;

&lt;p&gt;Elle permet de rapidement mutualiser les coûts grâce à sa facilité de transformation.
Malheureusement son utilisation pour le développement de parcours innovants reste restreinte à cause de sa non-compatibilité avec les fonctionnalités natives des appareils IOS.&lt;/p&gt;

&lt;p&gt;Aujourd’hui, la montée en puissance de cette technologie semble être conditionnée par Apple et leur volonté ou non d’améliorer la prise en charge des PWA. Après 5 ans d’existence, cette technologie n’a toujours pas réussi à percer.&lt;/p&gt;

&lt;p&gt;Article de Laurent, Romain, Yohann, Septembre 2021&lt;/p&gt;

&lt;p&gt;Glossaire:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;WAP:&lt;/b&gt;C’est le premier protocole de communication qui a permis de relier le réseau mobile à internet&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Application Hybride:&lt;/b&gt; contrairement aux applications natives qui utilisent directement les composants du device (mobile/tablette..), les applications hybrides utilisent le navigateur WEB embarqué dans le device et les technologies qu’on y retrouve pour le développement web, HTML, CSS, JavaScript&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Responsive:&lt;/b&gt; le Responsive Web Design (RWD) est une technique qui consiste à ajuster automatiquement l’affichage d’une page web à la taille de l’écran du terminal utilisé&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Script:&lt;/b&gt; suite de commandes qui permettent d’automatiser une tâche&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Stores d’application:&lt;/b&gt; bibliothèque telle que l’Apple store ou le Play store qui permettent de trouver et d’installer des applications sur un téléphone&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Framework:&lt;/b&gt; le regroupement d’outils qui facilitent le développement de logiciels et la création de systèmes (aussi appelé environnement de développement)&lt;/p&gt;

&lt;p&gt;Sources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.octo.com/cest-quoi-une-progressive-web-app-pwa/&lt;/li&gt;
  &lt;li&gt;https://fr.wikipedia.org/wiki/Progressive_web_app&lt;/li&gt;
  &lt;li&gt;https://developer.mozilla.org/fr/docs/Web/Progressive_web_apps&lt;/li&gt;
  &lt;li&gt;https://www.novaway.fr/blog/tech/3-exemples-pwa&lt;/li&gt;
  &lt;li&gt;https://www.goodbarber.com/blog/progressive-web-apps-browser-support-compatibility-a883/&lt;/li&gt;
  &lt;li&gt;https://developers.google.com/web/showcase/2017/twitter&lt;/li&gt;
  &lt;li&gt;https://developers.google.com/web/showcase/2016/flipkart&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;romain_vermeeren&quot;, &quot;yohann_gueguin&quot;, &quot;laurent_duchaussoy&quot;]</name></author><category term="Front-End" /><summary type="html">Le terme PWA est entré depuis quelques années dans le long répertoire des acronymes liés au numérique. Mais qu’est ce qu’une Progressive Web App ? Pour certains c’est la promesse d’une expérience mobile responsive boostée par les fonctionnalités de votre téléphone. Elle serait facile à mettre en place, de faible coût et elle n’aurait plus rien à envier aux applications natives. Afin de vous éclairer sur le sujet et de vous permettre de vous faire votre propre avis, vous trouverez ici les informations qui nous paraissent pertinentes pour une première approche fonctionnelle du sujet.</summary></entry></feed>